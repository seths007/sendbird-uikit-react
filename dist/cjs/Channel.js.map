{"version":3,"file":"Channel.js","sources":["../../src/smart-components/Conversation/dux/actionTypes.js","../../src/smart-components/Conversation/utils.js","../../src/smart-components/Conversation/dux/initialState.js","../../src/smart-components/Conversation/dux/reducers.js","../../src/smart-components/Conversation/hooks/useHandleChannelEvents.js","../../src/smart-components/Conversation/hooks/useGetChannel.js","../../src/smart-components/Conversation/hooks/useInitialMessagesFetch.js","../../src/smart-components/Conversation/hooks/useHandleReconnect.ts","../../src/smart-components/Conversation/hooks/useScrollCallback.js","../../src/smart-components/Conversation/hooks/useScrollDownCallback.js","../../src/smart-components/Conversation/hooks/useDeleteMessageCallback.js","../../src/smart-components/Conversation/hooks/useUpdateMessageCallback.js","../../src/smart-components/Conversation/hooks/useResendMessageCallback.js","../../src/smart-components/Conversation/hooks/useSendMessageCallback.js","../../src/smart-components/Conversation/hooks/useSendFileMessageCallback.js","../../src/ui/ReactionButton/index.jsx","../../src/smart-components/Conversation/hooks/useMemoizedEmojiListItems.jsx","../../src/smart-components/Conversation/hooks/useToggleReactionCallback.js","../../src/smart-components/Conversation/hooks/useScrollToMessage.ts","../../src/ui/MessageStatus/index.jsx","../../src/ui/MessageItemMenu/index.tsx","../../src/ui/MessageItemReactionMenu/index.tsx","../../src/ui/Tooltip/index.jsx","../../src/ui/TooltipWrapper/index.jsx","../../src/ui/ReactionBadge/index.jsx","../../src/ui/EmojiReactions/index.tsx","../../src/ui/AdminMessage/index.jsx","../../src/ui/TextMessageItemBody/index.tsx","../../src/ui/FileMessageItemBody/index.tsx","../../src/ui/ThumbnailMessageItemBody/index.tsx","../../src/ui/OGMessageItemBody/index.tsx","../../src/ui/UnknownMessageItemBody/index.tsx","../../src/ui/QuoteMessage/index.tsx","../../src/ui/MessageContent/index.tsx","../../src/smart-components/Conversation/components/RemoveMessage.jsx","../../src/smart-components/Conversation/components/MessageHOC.jsx","../../src/smart-components/Conversation/components/ConversationScroll.jsx","../../src/smart-components/Conversation/components/Notification.jsx","../../src/smart-components/Conversation/components/FrozenNotification.tsx","../../src/smart-components/Conversation/components/TypingIndicator.jsx","../../src/ui/QuoteMessageInput/QuoteMessageThumbnail.tsx","../../src/ui/QuoteMessageInput/index.tsx","../../src/smart-components/Conversation/components/MessageInputWrapper.tsx","../../src/ui/ConnectionStatus/index.jsx","../../src/ui/ChatHeader/utils.js","../../src/ui/ChatHeader/index.jsx","../../src/smart-components/Conversation/index.jsx"],"sourcesContent":["export const RESET_MESSAGES = 'RESET_MESSAGES';\nexport const RESET_STATE = 'RESET_STATE';\nexport const CLEAR_SENT_MESSAGES = 'CLEAR_SENT_MESSAGES';\nexport const GET_PREV_MESSAGES_START = 'GET_PREV_MESSAGES_START';\nexport const GET_PREV_MESSAGES_SUCESS = 'GET_PREV_MESSAGES_SUCESS';\nexport const GET_PREV_MESSAGES_FAILURE = 'GET_PREV_MESSAGES_FAILURE';\nexport const GET_NEXT_MESSAGES_SUCESS = 'GET_NEXT_MESSAGES_SUCESS';\nexport const GET_NEXT_MESSAGES_FAILURE = 'GET_NEXT_MESSAGES_FAILURE';\n\nexport const SEND_MESSAGEGE_START = 'SEND_MESSAGEGE_START';\nexport const SEND_MESSAGEGE_SUCESS = 'SEND_MESSAGEGE_SUCESS';\nexport const SEND_MESSAGEGE_FAILURE = 'SEND_MESSAGEGE_FAILURE';\n\nexport const RESEND_MESSAGEGE_START = 'RESEND_MESSAGEGE_START';\n\nexport const ON_MESSAGE_RECEIVED = 'ON_MESSAGE_RECEIVED';\nexport const UPDATE_UNREAD_COUNT = 'UPDATE_UNREAD_COUNT';\nexport const ON_MESSAGE_UPDATED = 'ON_MESSAGE_UPDATED';\nexport const ON_MESSAGE_THREAD_INFO_UPDATED = 'ON_MESSAGE_THREAD_INFO_UPDATED';\nexport const ON_MESSAGE_DELETED = 'ON_MESSAGE_DELETED';\nexport const ON_MESSAGE_DELETED_BY_REQ_ID = 'ON_MESSAGE_DELETED_BY_REQ_ID';\n\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_CHANNEL_INVALID = 'SET_CHANNEL_INVALID';\nexport const MARK_AS_READ = 'MARK_AS_READ';\n\nexport const ON_REACTION_UPDATED = 'ON_REACTION_UPDATED';\nexport const SET_EMOJI_CONTAINER = 'SET_EMOJI_CONTAINER';\n\nexport const MESSAGE_LIST_PARAMS_CHANGED = 'MESSAGE_LIST_PARAMS_CHANGED';\n","import format from 'date-fns/format';\nimport * as channelActions from './dux/actionTypes';\nimport * as topics from '../../lib/pubSub/topics';\n\nimport {\n  getSendingMessageStatus,\n  getOutgoingMessageStates,\n} from '../../utils';\n\nconst MessageStatusType = getOutgoingMessageStates();\nconst UNDEFINED = 'undefined';\nconst { SUCCEEDED, FAILED, PENDING } = getSendingMessageStatus();\n\nexport const scrollIntoLast = (intialTry = 0) => {\n  const MAX_TRIES = 10;\n  const currentTry = intialTry;\n  if (currentTry > MAX_TRIES) {\n    return;\n  }\n  try {\n    const scrollDOM = document.querySelector('.sendbird-conversation__messages-padding');\n    // eslint-disable-next-line no-multi-assign\n    scrollDOM.scrollTop = scrollDOM.scrollHeight;\n  } catch (error) {\n    setTimeout(() => {\n      scrollIntoLast(currentTry + 1);\n    }, 500 * currentTry);\n  }\n};\n\nexport const pubSubHandleRemover = (subscriber) => {\n  subscriber.forEach((s) => {\n    try {\n      s.remove();\n    } catch {\n      //\n    }\n  });\n};\n\nexport const pubSubHandler = (channelUrl, pubSub, dispatcher) => {\n  const subscriber = new Map();\n  if (!pubSub || !pubSub.subscribe) return subscriber;\n  subscriber.set(topics.SEND_USER_MESSAGE, pubSub.subscribe(topics.SEND_USER_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_MESSAGE_START, pubSub.subscribe(topics.SEND_MESSAGE_START, (msg) => {\n    const { channel, message } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_START,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.SEND_FILE_MESSAGE, pubSub.subscribe(topics.SEND_FILE_MESSAGE, (msg) => {\n    const { channel, message } = msg;\n    scrollIntoLast();\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.SEND_MESSAGEGE_SUCESS,\n        payload: message,\n      });\n    }\n  }));\n  subscriber.set(topics.UPDATE_USER_MESSAGE, pubSub.subscribe(topics.UPDATE_USER_MESSAGE, (msg) => {\n    const { channel, message, fromSelector } = msg;\n    if (fromSelector && channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_UPDATED,\n        payload: { channel, message },\n      });\n    }\n  }));\n  subscriber.set(topics.DELETE_MESSAGE, pubSub.subscribe(topics.DELETE_MESSAGE, (msg) => {\n    const { channel, messageId } = msg;\n    if (channel && (channelUrl === channel.url)) {\n      dispatcher({\n        type: channelActions.ON_MESSAGE_DELETED,\n        payload: messageId,\n      });\n    }\n  }));\n\n  return subscriber;\n};\n\nexport const getParsedStatus = (message, currentGroupChannel) => {\n  if (message.requestState === FAILED) {\n    return MessageStatusType.FAILED;\n  }\n\n  if (message.requestState === PENDING) {\n    return MessageStatusType.PENDING;\n  }\n\n  if (message.requestState === SUCCEEDED) {\n    if (!currentGroupChannel) {\n      return MessageStatusType.SENT;\n    }\n\n    const unreadCount = currentGroupChannel.getReadReceipt(message);\n    if (unreadCount === 0) {\n      return MessageStatusType.READ;\n    }\n\n    const isDelivered = currentGroupChannel.getDeliveryReceipt(message) === 0;\n    if (isDelivered) {\n      return MessageStatusType.DELIVERED;\n    }\n\n    return MessageStatusType.SENT;\n  }\n\n  return null;\n};\n\nexport const isOperator = (groupChannel = {}) => {\n  const { myRole } = groupChannel;\n  return myRole === 'operator';\n};\n\nexport const isDisabledBecauseFrozen = (groupChannel = {}) => {\n  const { isFrozen } = groupChannel;\n  return isFrozen && !isOperator(groupChannel);\n};\n\nexport const isDisabledBecauseMuted = (groupChannel = {}) => {\n  const { myMutedState } = groupChannel;\n  return myMutedState === 'muted';\n};\n\nexport const getEmojiCategoriesFromEmojiContainer = (emojiContainer = {}) => (\n  emojiContainer.emojiCategories ? emojiContainer.emojiCategories : []\n);\n\nexport const getAllEmojisFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojis = [];\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      allEmojis.push(emojis[emojiIndex]);\n    }\n  }\n  return allEmojis;\n};\n\nexport const getEmojisFromEmojiContainer = (emojiContainer = {}, emojiCategoryId = '') => (\n  emojiContainer.emojiCategories\n    ? emojiContainer.emojiCategories\n      .filter((emojiCategory) => emojiCategory.id === emojiCategoryId)[0].emojis\n    : []\n);\n\nexport const getAllEmojisMapFromEmojiContainer = (emojiContainer = {}) => {\n  const { emojiCategories = [] } = emojiContainer;\n  const allEmojisMap = new Map();\n\n  for (let categoryIndex = 0; categoryIndex < emojiCategories.length; categoryIndex += 1) {\n    const { emojis } = emojiCategories[categoryIndex];\n    for (let emojiIndex = 0; emojiIndex < emojis.length; emojiIndex += 1) {\n      const { key, url } = emojis[emojiIndex];\n      allEmojisMap.set(key, url);\n    }\n  }\n  return allEmojisMap;\n};\n\nexport const getNicknamesMapFromMembers = (members = []) => {\n  const nicknamesMap = new Map();\n  for (let memberIndex = 0; memberIndex < members.length; memberIndex += 1) {\n    const { userId, nickname } = members[memberIndex];\n    nicknamesMap.set(userId, nickname);\n  }\n  return nicknamesMap;\n};\n\nexport const getMessageCreatedAt = (message) => format(message.createdAt, 'p');\n\nexport const isSameGroup = (message, comparingMessage) => {\n  if (!(message\n    && comparingMessage\n    && message?.messageType !== 'admin'\n    && comparingMessage?.messageType !== 'admin'\n    && message?.sender\n    && comparingMessage?.sender\n    && message?.createdAt\n    && comparingMessage?.createdAt\n    && message?.sender?.userId\n    && comparingMessage?.sender?.userId\n  )) {\n    return false;\n  }\n\n  return (\n    message?.sendingStatus === comparingMessage?.sendingStatus\n    && message?.sender?.userId === comparingMessage?.sender?.userId\n    && getMessageCreatedAt(message) === getMessageCreatedAt(comparingMessage)\n  );\n};\n\nexport const compareMessagesForGrouping = (\n  prevMessage,\n  currMessage,\n  nextMessage,\n) => {\n  const sendingStatus = currMessage?.sendingStatus || '';\n  const isAcceptable = sendingStatus !== 'pending' && sendingStatus !== 'failed';\n  return [\n    isSameGroup(prevMessage, currMessage) && isAcceptable,\n    isSameGroup(currMessage, nextMessage) && isAcceptable,\n  ];\n};\n\nexport const hasOwnProperty = (property) => (payload) => {\n  // eslint-disable-next-line no-prototype-builtins\n  if (payload && payload.hasOwnProperty && payload.hasOwnProperty(property)) {\n    return true;\n  }\n  return false;\n};\n\nexport const passUnsuccessfullMessages = (allMessages, newMessage) => {\n  const { sendingStatus = UNDEFINED } = newMessage;\n  if (sendingStatus === SUCCEEDED || sendingStatus === PENDING) {\n    const lastIndexOfSucceededMessage = allMessages\n      .map((message) => (\n        message.sendingStatus\n        || ((message.isAdminMessage && message.isAdminMessage()) ? SUCCEEDED : UNDEFINED)\n      ))\n      .lastIndexOf(SUCCEEDED);\n    if (lastIndexOfSucceededMessage + 1 < allMessages.length) {\n      const messages = [...allMessages];\n      messages.splice(lastIndexOfSucceededMessage + 1, 0, newMessage);\n      return messages;\n    }\n  }\n  return [\n    ...allMessages,\n    newMessage,\n  ];\n};\n\nexport const pxToNumber = (px) => {\n  if (typeof px === 'number') {\n    return px;\n  }\n  if (typeof px === 'string') {\n    const parsed = Number.parseFloat(px);\n    if (!Number.isNaN(parsed)) {\n      return parsed;\n    }\n  }\n  return null;\n};\n\nexport default getParsedStatus;\n","export default {\n  initialized: false,\n  loading: false,\n  allMessages: [],\n  currentGroupChannel: { members: [] },\n  // for scrollup\n  hasMore: false,\n  lastMessageTimeStamp: 0,\n  // for scroll down\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  hasMoreToBottom: false,\n  latestFetchedMessageTimeStamp: 0,\n  emojiContainer: {},\n  unreadCount: 0,\n  unreadSince: null,\n  isInvalid: false,\n  messageListParams: null,\n};\n","import format from 'date-fns/format';\n\nimport * as actionTypes from './actionTypes';\nimport initialState from './initialState';\n\nimport compareIds from '../../../utils/compareIds';\nimport { passUnsuccessfullMessages, hasOwnProperty } from '../utils';\nimport { filterMessageListParams, getSendingMessageStatus } from '../../../utils';\n\nconst {\n  SUCCEEDED,\n  FAILED,\n  PENDING,\n} = getSendingMessageStatus();\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case actionTypes.RESET_STATE:\n      return initialState;\n    case actionTypes.RESET_MESSAGES:\n      return {\n        ...state,\n        // when user switches channel, if the previous channel `hasMore`\n        // the onScroll gets called twice, setting hasMore false prevents this\n        hasMore: false,\n        allMessages: [],\n      };\n    case actionTypes.GET_PREV_MESSAGES_START:\n      return {\n        ...state,\n        loading: true,\n      };\n    case actionTypes.CLEAR_SENT_MESSAGES:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages.filter((m) => (\n            m.sendingStatus !== SUCCEEDED\n          )),\n        ],\n      };\n    case actionTypes.GET_PREV_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      const hasHasMoreToBottom = hasOwnProperty('hasMoreToBottom')(action.payload);\n      const hasLatestFetchedMessageTimeStamp = hasOwnProperty('latestFetchedMessageTimeStamp')(action.payload);\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        // if present change else, keep\n        ...(hasHasMoreToBottom && {\n          hasMoreToBottom: action.payload.hasMoreToBottom,\n        }),\n        ...(hasLatestFetchedMessageTimeStamp && {\n          latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        }),\n        allMessages: [\n          ...filteredNewMessages,\n          ...updatedAllMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_SUCESS: {\n      const receivedMessages = action.payload.messages || [];\n      const { currentGroupChannel = {} } = action.payload;\n\n      const stateChannel = state.currentGroupChannel || {};\n      const stateChannelUrl = stateChannel.url;\n      const actionChannelUrl = currentGroupChannel.url;\n      if (actionChannelUrl !== stateChannelUrl) {\n        return state;\n      }\n\n      // remove duplicate messages\n      const duplicatedMessageIds = [];\n      const updatedAllMessages = state.allMessages.map((msg) => {\n        const duplicatedMessage = receivedMessages.find(({ messageId }) => (\n          compareIds(messageId, msg.messageId)\n        ));\n        if (!duplicatedMessage) {\n          return msg;\n        }\n        duplicatedMessageIds.push(duplicatedMessage.messageId);\n        return (duplicatedMessage.updatedAt > msg.updatedAt) ? duplicatedMessage : msg;\n      });\n      const filteredNewMessages = (duplicatedMessageIds.length > 0)\n        ? receivedMessages.filter((msg) => (\n          !duplicatedMessageIds.find((messageId) => compareIds(messageId, msg.messageId))\n        ))\n        : receivedMessages;\n\n      return {\n        ...state,\n        loading: false,\n        initialized: true,\n        hasMore: action.payload.hasMore,\n        lastMessageTimeStamp: action.payload.lastMessageTimeStamp,\n        hasMoreToBottom: action.payload.hasMoreToBottom,\n        latestFetchedMessageTimeStamp: action.payload.latestFetchedMessageTimeStamp,\n        allMessages: [\n          ...updatedAllMessages,\n          ...filteredNewMessages,\n        ],\n      };\n    }\n    case actionTypes.GET_NEXT_MESSAGES_FAILURE: {\n      return { ...state };\n    }\n    case actionTypes.SEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: [\n          ...state.allMessages,\n          { ...action.payload },\n        ],\n      };\n    case actionTypes.SEND_MESSAGEGE_SUCESS: {\n      const newMessages = state.allMessages.map((m) => (\n        compareIds(m.reqId, action.payload.reqId) ? action.payload : m\n      ));\n      [...newMessages].sort((a, b) => (\n        (\n          a.sendingStatus\n          && b.sendingStatus\n          && a.sendingStatus === SUCCEEDED\n          && (\n            b.sendingStatus === PENDING\n            || b.sendingStatus === FAILED\n          )\n        ) ? -1 : 1\n      ));\n      return {\n        ...state,\n        allMessages: newMessages,\n      };\n    }\n    case actionTypes.SEND_MESSAGEGE_FAILURE: {\n      // eslint-disable-next-line no-param-reassign\n      action.payload.failed = true;\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    }\n    case actionTypes.SET_CURRENT_CHANNEL: {\n      return {\n        ...state,\n        currentGroupChannel: action.payload,\n        isInvalid: false,\n      };\n    }\n    case actionTypes.SET_CHANNEL_INVALID: {\n      return {\n        ...state,\n        isInvalid: true,\n      };\n    }\n    case actionTypes.UPDATE_UNREAD_COUNT: {\n      const { channel } = action.payload;\n      const { currentGroupChannel = {}, unreadCount } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      return {\n        ...state,\n        unreadSince: unreadCount + 1,\n      };\n    }\n    case actionTypes.ON_MESSAGE_RECEIVED: {\n      const { channel, message, scrollToEnd } = action.payload;\n      let unreadCount = 0;\n      const { currentGroupChannel = {}, unreadSince } = state;\n      const currentGroupChannelUrl = currentGroupChannel.url;\n\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state;\n      }\n      // Excluded overlapping messages\n      if (state.allMessages.some((msg) => msg.messageId === message.messageId)) {\n        return state;\n      }\n      // Filter by userFilledQuery\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        return state;\n      }\n\n      unreadCount = state.unreadCount + 1;\n      // reset unreadCount if have to scrollToEnd\n      if (scrollToEnd) {\n        unreadCount = 0;\n      }\n\n      if (message.isAdminMessage && message.isAdminMessage()) {\n        return {\n          ...state,\n          allMessages: passUnsuccessfullMessages(state.allMessages, message),\n        };\n      }\n      return {\n        ...state,\n        unreadCount,\n        unreadSince: (unreadCount === 1)\n          ? format(new Date(), 'p MMM dd')\n          : unreadSince,\n        allMessages: passUnsuccessfullMessages(state.allMessages, message),\n      };\n    }\n    case actionTypes.ON_MESSAGE_UPDATED: {\n      const { channel, message } = action.payload;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (!compareIds(channel.url, currentGroupChannelUrl)) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      if (state.messageListParams && !filterMessageListParams(state.messageListParams, message)) {\n        // Delete the message if it doesn't match to the params anymore\n        return {\n          ...state,\n          allMessages: state.allMessages.filter((m) => (\n            !compareIds(m.messageId, message?.messageId)\n          )),\n        };\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.messageId, action.payload.message.messageId)\n            ? action.payload.message\n            : m\n        )),\n      };\n    }\n    case actionTypes.ON_MESSAGE_THREAD_INFO_UPDATED: {\n      const { channel, event } = action.payload;\n      const { channelUrl, threadInfo, targetMessageId } = event;\n      const currentGroupChannelUrl = (state.currentGroupChannel && state.currentGroupChannel.url) || '';\n      if (\n        !compareIds(channel.url, currentGroupChannelUrl)\n        || !compareIds(channel.url, channelUrl)\n      ) {\n        return state; // Ignore event when it is not for the current channel\n      }\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, targetMessageId)) {\n            // eslint-disable-next-line no-param-reassign\n            m.threadInfo = threadInfo; // Upsert threadInfo to the target message\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.RESEND_MESSAGEGE_START:\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => (\n          compareIds(m.reqId, action.payload.reqId)\n            ? action.payload\n            : m\n        )),\n      };\n    case actionTypes.MARK_AS_READ:\n      return {\n        ...state,\n        unreadCount: 0,\n        unreadSince: null,\n      };\n    case actionTypes.ON_MESSAGE_DELETED:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.messageId, action.payload)\n        )),\n      };\n    case actionTypes.ON_MESSAGE_DELETED_BY_REQ_ID:\n      return {\n        ...state,\n        allMessages: state.allMessages.filter((m) => (\n          !compareIds(m.reqId, action.payload)\n        )),\n      };\n    case actionTypes.SET_EMOJI_CONTAINER: {\n      return {\n        ...state,\n        emojiContainer: action.payload,\n      };\n    }\n    case actionTypes.ON_REACTION_UPDATED: {\n      return {\n        ...state,\n        allMessages: state.allMessages.map((m) => {\n          if (compareIds(m.messageId, action.payload.messageId)) {\n            if (m.applyReactionEvent && typeof m.applyReactionEvent === 'function') {\n              m.applyReactionEvent(action.payload);\n            }\n            return m;\n          }\n          return m;\n        }),\n      };\n    }\n    case actionTypes.MESSAGE_LIST_PARAMS_CHANGED: {\n      return {\n        ...state,\n        messageListParams: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { useEffect } from 'react';\n\nimport * as messageActions from '../dux/actionTypes';\nimport { uuidv4 } from '../../../utils/uuid';\nimport compareIds from '../../../utils/compareIds';\nimport { scrollIntoLast } from '../utils';\n\n/**\n * Handles ChannelEvents and send values to dispatcher using messagesDispatcher\n * messagesDispatcher: Dispatcher\n * sdk: sdkInstance\n * logger: loggerInstance\n * channelUrl: string\n * sdkInit: bool\n */\nfunction useHandleChannelEvents({ currentGroupChannel, sdkInit, hasMoreToBottom }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n  scrollRef,\n  setQuoteMessage,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel?.url;\n  useEffect(() => {\n    const messageReceiverId = uuidv4();\n    if (channelUrl && sdk && sdk.ChannelHandler) {\n      const ChannelHandler = new sdk.ChannelHandler();\n      logger.info('Channel | useHandleChannelEvents: Setup event handler', messageReceiverId);\n\n      ChannelHandler.onMessageReceived = (channel, message) => {\n        // donot update if hasMoreToBottom\n        if (compareIds(channel.url, channelUrl) && !hasMoreToBottom) {\n          let scrollToEnd = false;\n          try {\n            const { current } = scrollRef;\n            scrollToEnd = current.offsetHeight + current.scrollTop >= current.scrollHeight;\n          } catch (error) {\n            //\n          }\n\n          logger.info('Channel | useHandleChannelEvents: onMessageReceived', message);\n          messagesDispatcher({\n            type: messageActions.ON_MESSAGE_RECEIVED,\n            payload: { channel, message, scrollToEnd },\n          });\n\n          if (scrollToEnd) {\n            try {\n              setTimeout(() => {\n                try {\n                  currentGroupChannel.markAsRead();\n                } catch {\n                  //\n                }\n                scrollIntoLast();\n              });\n            } catch (error) {\n              logger.warning('Channel | onMessageReceived | scroll to end failed');\n            }\n          }\n        }\n        if (compareIds(channel.url, channelUrl) && hasMoreToBottom) {\n          messagesDispatcher({\n            type: messageActions.UPDATE_UNREAD_COUNT,\n            payload: { channel },\n          });\n        }\n      };\n\n      /**\n       * We need to update current channel with the channel,\n       * when onReadReceiptUpdated or onDeliveryReceiptUpdated are called,\n       * because cachedReadReceiptStatus and cachedDeliveryReceiptStatus properties were changed\n       */\n      ChannelHandler.onReadReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onReadReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n      ChannelHandler.onDeliveryReceiptUpdated = (channel) => {\n        if (compareIds(channel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onDeliveryReceiptUpdated', channel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: channel,\n          });\n        }\n      };\n\n      ChannelHandler.onMessageUpdated = (channel, message) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageUpdated', message);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_UPDATED,\n          payload: { channel, message },\n        });\n      };\n\n      ChannelHandler.onThreadInfoUpdated = (channel, event) => {\n        logger.info('Channel | useHandleChannelEvents: onThreadInfoUpdated', event);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_THREAD_INFO_UPDATED,\n          payload: { channel, event },\n        });\n      };\n\n      ChannelHandler.onMessageDeleted = (_, messageId) => {\n        logger.info('Channel | useHandleChannelEvents: onMessageDeleted', messageId);\n        setQuoteMessage(null);\n        messagesDispatcher({\n          type: messageActions.ON_MESSAGE_DELETED,\n          payload: messageId,\n        });\n      };\n\n      ChannelHandler.onReactionUpdated = (_, reactionEvent) => {\n        logger.info('Channel | useHandleChannelEvents: onReactionUpdated', reactionEvent);\n        messagesDispatcher({\n          type: messageActions.ON_REACTION_UPDATED,\n          payload: reactionEvent,\n        });\n      };\n\n      ChannelHandler.onChannelChanged = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelChanged', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelFrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onChannelUnfrozen = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onChannelUnFrozen', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserMuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserMuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserUnmuted = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserUnmuted', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onUserBanned = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onUserBanned', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      ChannelHandler.onOperatorUpdated = (groupChannel) => {\n        if (compareIds(groupChannel.url, channelUrl)) {\n          logger.info('Channel | useHandleChannelEvents: onOperatorUpdated', groupChannel);\n          messagesDispatcher({\n            type: messageActions.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n        }\n      };\n\n      // Add this channel event handler to the SendBird object.\n      sdk.addChannelHandler(messageReceiverId, ChannelHandler);\n    }\n    return () => {\n      if (sdk && sdk.removeChannelHandler) {\n        logger.info('Channel | useHandleChannelEvents: Removing message reciver handler', messageReceiverId);\n        sdk.removeChannelHandler(messageReceiverId);\n      }\n    };\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useHandleChannelEvents;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useSetChannel({ channelUrl, sdkInit }, {\n  messagesDispatcher,\n  sdk,\n  logger,\n}) {\n  useEffect(() => {\n    if (channelUrl && sdkInit && sdk && sdk.GroupChannel) {\n      logger.info('Channel | useSetChannel fetching channel', channelUrl);\n      sdk.GroupChannel.getChannel(channelUrl)\n        .then((groupChannel) => {\n          logger.info('Channel | useSetChannel fetched channel', groupChannel);\n          messagesDispatcher({\n            type: messageActionTypes.SET_CURRENT_CHANNEL,\n            payload: groupChannel,\n          });\n\n          logger.info('Channel: Mark as read', groupChannel);\n          // this order is important - this mark as read should update the event handler up above\n          try {\n            groupChannel.markAsRead();\n          } catch {\n            //\n          }\n        })\n        .catch((e) => {\n          logger.warning('Channel | useSetChannel fetch channel failed', { channelUrl, e });\n          messagesDispatcher({\n            type: messageActionTypes.SET_CHANNEL_INVALID,\n          });\n        });\n      sdk.getAllEmoji((emojiContainer_, err) => {\n        if (err) {\n          logger.error('Channel: Getting emojis failed', err);\n          return;\n        }\n        logger.info('Channel: Getting emojis success', emojiContainer_);\n        messagesDispatcher({\n          type: messageActionTypes.SET_EMOJI_CONTAINER,\n          payload: emojiContainer_,\n        });\n      });\n    }\n  }, [channelUrl, sdkInit]);\n}\n\nexport default useSetChannel;\n","import { useEffect } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\n\nconst PREV_RESULT_SIZE = 30;\nconst NEXT_RESULT_SIZE = 10;\n\nconst getLatestMessageTimeStamp = (messages = []) => {\n  const latestMessage = messages[messages.length - 1];\n  return (latestMessage && latestMessage.createdAt) || null;\n};\n\nfunction useInitialMessagesFetch({\n  currentGroupChannel,\n  userFilledMessageListQuery,\n  intialTimeStamp,\n  replyType,\n}, {\n  sdk,\n  logger,\n  messagesDispatcher,\n}) {\n  const channelUrl = currentGroupChannel && currentGroupChannel.url;\n  useEffect(() => {\n    logger.info('Channel useInitialMessagesFetch: Setup started', currentGroupChannel);\n    messagesDispatcher({\n      type: messageActionTypes.RESET_MESSAGES,\n    });\n\n    if (sdk && sdk.MessageListParams\n      && currentGroupChannel && currentGroupChannel.getMessagesByTimestamp) {\n      const messageListParams = new sdk.MessageListParams();\n      messageListParams.prevResultSize = PREV_RESULT_SIZE;\n      messageListParams.isInclusive = true;\n      messageListParams.includeReplies = false;\n      messageListParams.includeReaction = true;\n      if (replyType && replyType === 'QUOTE_REPLY') {\n        messageListParams.includeThreadInfo = true;\n        messageListParams.includeParentMessageInfo = true;\n        messageListParams.replyType = 'only_reply_to_channel';\n      }\n      if (userFilledMessageListQuery) {\n        Object.keys(userFilledMessageListQuery).forEach((key) => {\n          messageListParams[key] = userFilledMessageListQuery[key];\n        });\n      }\n      if ((replyType && replyType === 'QUOTE_REPLY') || userFilledMessageListQuery) {\n        logger.info('Channel useInitialMessagesFetch: Setup messageListParams', messageListParams);\n        messagesDispatcher({\n          type: messageActionTypes.MESSAGE_LIST_PARAMS_CHANGED,\n          payload: messageListParams,\n        });\n      }\n\n      logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n      messagesDispatcher({\n        type: messageActionTypes.GET_PREV_MESSAGES_START,\n      });\n\n      if (intialTimeStamp) {\n        messageListParams.nextResultSize = NEXT_RESULT_SIZE;\n        currentGroupChannel.getMessagesByTimestamp(\n          intialTimeStamp,\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            // to make sure there are no more messages below\n            const nextMessageListParams = new sdk.MessageListParams();\n            nextMessageListParams.nextResultSize = NEXT_RESULT_SIZE;\n            nextMessageListParams.isInclusive = true;\n            nextMessageListParams.includeReplies = false;\n            nextMessageListParams.includeReaction = true;\n            if (replyType && replyType === 'QUOTE_REPLY') {\n              nextMessageListParams.includeThreadInfo = true;\n              nextMessageListParams.includeParentMessageInfo = true;\n              nextMessageListParams.replyType = 'only_reply_to_channel';\n            }\n            if (userFilledMessageListQuery) {\n              Object.keys(userFilledMessageListQuery).forEach((key) => {\n                nextMessageListParams[key] = userFilledMessageListQuery[key];\n              });\n            }\n            currentGroupChannel.getMessagesByTimestamp(\n              latestFetchedMessageTimeStamp || new Date().getTime(),\n              nextMessageListParams,\n            ).then((nextMessages) => {\n              messagesDispatcher({\n                type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                payload: {\n                  messages,\n                  hasMore,\n                  lastMessageTimeStamp,\n                  currentGroupChannel,\n                  latestFetchedMessageTimeStamp,\n                  hasMoreToBottom: nextMessages && nextMessages.length > 0,\n                },\n              });\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      } else {\n        currentGroupChannel.getMessagesByTimestamp(\n          new Date().getTime(),\n          messageListParams,\n        )\n          .then((messages) => {\n            const hasMore = (messages && messages.length > 0);\n            const lastMessageTimeStamp = hasMore\n              ? messages[0].createdAt\n              : null;\n            const latestFetchedMessageTimeStamp = getLatestMessageTimeStamp(messages);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages,\n                hasMore,\n                lastMessageTimeStamp,\n                currentGroupChannel,\n                latestFetchedMessageTimeStamp,\n                hasMoreToBottom: false,\n              },\n            });\n          })\n          .catch((error) => {\n            logger.error('Channel: Fetching messages failed', error);\n            messagesDispatcher({\n              type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n              payload: {\n                messages: [],\n                hasMore: false,\n                lastMessageTimeStamp: 0,\n                currentGroupChannel,\n              },\n            });\n          })\n          .finally(() => {\n            if (!intialTimeStamp) {\n              setTimeout(() => utils.scrollIntoLast());\n            }\n            try {\n              currentGroupChannel.markAsRead();\n            } catch {\n              //\n            }\n          });\n      }\n    }\n  }, [channelUrl, userFilledMessageListQuery, intialTimeStamp]);\n  /**\n   * Note - useEffect(() => {}, [currentGroupChannel])\n   * was buggy, that is why we did\n   * const channelUrl = currentGroupChannel && currentGroupChannel.url;\n   * useEffect(() => {}, [channelUrl])\n   * Again, this hook is supposed to execute when currentGroupChannel changes\n   * The 'channelUrl' here is not the same memory reference from Conversation.props\n   */\n}\n\nexport default useInitialMessagesFetch;\n","import { useEffect } from 'react';\n\nimport * as utils from '../utils';\nimport * as messageActionTypes from '../dux/actionTypes';\nimport { Logger, Sdk } from '../../..';\nimport { GroupChannel } from 'sendbird';\n\ninterface DynamicParams {\n  isOnline: boolean;\n  replyType?: string;\n}\n\ninterface StaticParams {\n  logger: Logger;\n  sdk: Sdk;\n  currentGroupChannel: GroupChannel;\n  messagesDispatcher: ({ type: string, payload: any }) => void;\n  userFilledMessageListQuery?: Record<string, any>;\n}\n\nfunction useHandleReconnect(\n  { isOnline, replyType }: DynamicParams,\n  {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  }: StaticParams,\n): void {\n  useEffect(() => {\n    const wasOffline = !isOnline;\n    return () => {\n      // state changed from offline to online\n      if (wasOffline && currentGroupChannel?.url) {\n        logger.info('Refreshing conversation state');\n        const useReaction = sdk?.appInfo?.isUsingReaction || false;\n\n        const messageListParams = new sdk.MessageListParams();\n        messageListParams.prevResultSize = 30;\n        messageListParams.isInclusive = true;\n        messageListParams.includeReplies = false;\n        messageListParams.includeReaction = useReaction;\n        if (replyType && replyType === 'QUOTE_REPLY') {\n          messageListParams.includeThreadInfo = true;\n          messageListParams.includeParentMessageInfo = true;\n          messageListParams.replyType = 'only_reply_to_channel';\n        }\n        if (userFilledMessageListQuery) {\n          Object.keys(userFilledMessageListQuery).forEach((key) => {\n            messageListParams[key] = userFilledMessageListQuery[key];\n          });\n        }\n        logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_START,\n          payload: null,\n        });\n\n        sdk.GroupChannel.getChannel(currentGroupChannel.url)\n          .then((groupChannel) => {\n            const lastMessageTime = new Date().getTime();\n\n            groupChannel.getMessagesByTimestamp(\n              lastMessageTime,\n              messageListParams,\n            )\n              .then((messages) => {\n                messagesDispatcher({\n                  type: messageActionTypes.CLEAR_SENT_MESSAGES,\n                  payload: null,\n                });\n\n                const hasMore = messages?.length > 0;\n                const lastMessageTimeStamp = hasMore\n                  ? messages[0].createdAt\n                  : null;\n                messagesDispatcher({\n                  type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n                  payload: {\n                    messages,\n                    hasMore,\n                    lastMessageTimeStamp,\n                    currentGroupChannel,\n                  },\n                });\n                setTimeout(() => utils.scrollIntoLast());\n              })\n              .catch((error) => {\n                logger.error('Channel: Fetching messages failed', error);\n              })\n              .finally(() => {\n                try {\n                  currentGroupChannel.markAsRead?.();\n                } catch {\n                  //\n                }\n              });\n          });\n      }\n    };\n  }, [isOnline, replyType]);\n}\n\nexport default useHandleReconnect;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useScrollCallback({\n  currentGroupChannel,\n  lastMessageTimeStamp,\n  userFilledMessageListQuery,\n  replyType,\n}, {\n  hasMore,\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMore) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.prevResultSize = 30;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      lastMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const hasMoreMessages = (messages && messages.length > 0);\n        const lastMessageTs = hasMoreMessages\n          ? messages[0].createdAt\n          : null;\n\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMore: hasMoreMessages,\n            lastMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_PREV_MESSAGES_SUCESS,\n          payload: {\n            messages: [],\n            hasMore: false,\n            lastMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, lastMessageTimeStamp, replyType]);\n}\n\nexport default useScrollCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nconst RESULT_SIZE = 30;\n\nfunction useScrollDownCallback({\n  currentGroupChannel,\n  latestFetchedMessageTimeStamp,\n  userFilledMessageListQuery,\n  hasMoreToBottom,\n  replyType,\n}, {\n  logger,\n  messagesDispatcher,\n  sdk,\n}) {\n  return useCallback((cb) => {\n    if (!hasMoreToBottom) { return; }\n    const { appInfo = {} } = sdk;\n    const useReaction = appInfo.isUsingReaction || false;\n\n    const messageListParams = new sdk.MessageListParams();\n    messageListParams.nextResultSize = RESULT_SIZE;\n    messageListParams.isInclusive = true;\n    messageListParams.includeReplies = false;\n    messageListParams.includeReaction = useReaction;\n    if (replyType && replyType === 'QUOTE_REPLY') {\n      messageListParams.includeThreadInfo = true;\n      messageListParams.includeParentMessageInfo = true;\n      messageListParams.replyType = 'only_reply_to_channel';\n    }\n    if (userFilledMessageListQuery) {\n      Object.keys(userFilledMessageListQuery).forEach((key) => {\n        messageListParams[key] = userFilledMessageListQuery[key];\n      });\n    }\n    logger.info('Channel: Fetching later messages', { currentGroupChannel, userFilledMessageListQuery });\n\n    currentGroupChannel.getMessagesByTimestamp(\n      latestFetchedMessageTimeStamp || new Date().getTime(),\n      messageListParams,\n    )\n      .then((messages) => {\n        const messagesLength = (messages && messages.length) || 0;\n        const hasMoreMessages = (messagesLength > 0)\n          && (messageListParams.nextResultSize === messagesLength);\n        const lastMessageTs = hasMoreMessages\n          ? messages[messages.length - 1].createdAt\n          : null;\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_SUCESS,\n          payload: {\n            messages,\n            hasMoreToBottom: hasMoreMessages,\n            latestFetchedMessageTimeStamp: lastMessageTs,\n            currentGroupChannel,\n          },\n        });\n        cb([messages, null]);\n      })\n      .catch((error) => {\n        logger.error('Channel: Fetching later messages failed', error);\n        messagesDispatcher({\n          type: messageActionTypes.GET_NEXT_MESSAGES_FAILURE,\n          payload: {\n            messages: [],\n            hasMoreToBottom: false,\n            latestFetchedMessageTimeStamp: 0,\n            currentGroupChannel,\n          },\n        });\n        cb([null, error]);\n      })\n      .finally(() => {\n        try {\n          currentGroupChannel.markAsRead();\n        } catch {\n          //\n        }\n      });\n  }, [currentGroupChannel, latestFetchedMessageTimeStamp, hasMoreToBottom, replyType]);\n}\n\nexport default useScrollDownCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher }, { logger }) {\n  return useCallback((message, cb) => {\n    logger.info('Channel | useDeleteMessageCallback: Deleting message', message);\n    const { requestState } = message;\n    logger.info('Channel | useDeleteMessageCallback: Deleting message requestState:', requestState);\n\n    // Message is only on local\n    if (requestState === 'failed' || requestState === 'pending') {\n      logger.info('Channel | useDeleteMessageCallback: Deleted message from local:', message);\n      messagesDispatcher({\n        type: messageActionTypes.ON_MESSAGE_DELETED_BY_REQ_ID,\n        payload: message.reqId,\n      });\n      if (cb) { cb(); }\n      return;\n    }\n\n    // Message is on server\n    currentGroupChannel.deleteMessage(message, (err) => {\n      logger.info('Channel | useDeleteMessageCallback: Deleting message from remote:', requestState);\n      if (cb) { cb(err); }\n      if (!err) {\n        logger.info('Channel | useDeleteMessageCallback: Deleting message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_DELETED,\n          payload: message.messageId,\n        });\n      } else {\n        logger.warning('Channel | useDeleteMessageCallback: Deleting message failed!', err);\n      }\n    });\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useDeleteMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as topics from '../../../lib/pubSub/topics';\n\nfunction useUpdateMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n  onBeforeUpdateUserMessage,\n}, {\n  logger,\n  pubSub,\n  sdk,\n}) {\n  return useCallback((messageId, text, cb) => {\n    const createParamsDefault = (txt) => {\n      const params = new sdk.UserMessageParams();\n      params.message = txt;\n      return params;\n    };\n\n    const createCustomPrams = onBeforeUpdateUserMessage\n      && typeof onBeforeUpdateUserMessage === 'function';\n\n    if (createCustomPrams) {\n      logger.info('Channel: creating params using onBeforeUpdateUserMessage', onBeforeUpdateUserMessage);\n    }\n\n    const params = onBeforeUpdateUserMessage\n      ? onBeforeUpdateUserMessage(text)\n      : createParamsDefault(text);\n\n    currentGroupChannel.updateUserMessage(messageId, params, (r, e) => {\n      logger.info('Channel: Updating message!', params);\n      const swapParams = sdk.getErrorFirstCallback();\n      let message = r;\n      let err = e;\n      if (swapParams) {\n        message = e;\n        err = r;\n      }\n      if (cb) {\n        cb(err, message);\n      }\n      if (!err) {\n        logger.info('Channel: Updating message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.ON_MESSAGE_UPDATED,\n          payload: {\n            channel: currentGroupChannel,\n            message,\n          },\n        });\n        pubSub.publish(\n          topics.UPDATE_USER_MESSAGE,\n          {\n            message,\n            channel: currentGroupChannel,\n          },\n        );\n      } else {\n        logger.warning('Channel: Updating message failed!', err);\n      }\n    });\n  }, [currentGroupChannel.url, messagesDispatcher, onBeforeUpdateUserMessage]);\n}\n\nexport default useUpdateMessageCallback;\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\n\nfunction useResendMessageCallback({\n  currentGroupChannel,\n  messagesDispatcher,\n}, {\n  logger,\n}) {\n  return useCallback((failedMessage) => {\n    logger.info('Channel: Resending message has started', failedMessage);\n    const { messageType, file } = failedMessage;\n    if (failedMessage && typeof failedMessage.isResendable === 'function'\n      && failedMessage.isResendable()\n    ) {\n      // eslint-disable-next-line no-param-reassign\n      failedMessage.requestState = 'pending';\n      messagesDispatcher({\n        type: messageActionTypes.RESEND_MESSAGEGE_START,\n        payload: failedMessage,\n      });\n\n      // userMessage\n      if (messageType === 'user') {\n        currentGroupChannel\n          .resendUserMessage(failedMessage)\n          .then((message) => {\n            logger.info('Channel: Resending message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n        return;\n      }\n\n      if (messageType === 'file') {\n        currentGroupChannel\n          .resendFileMessage(failedMessage, file)\n          .then((message) => {\n            logger.info('Channel: Resending file message success!', { message });\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n              payload: message,\n            });\n          })\n          .catch((e) => {\n            logger.warning('Channel: Resending file message failed!', { e });\n            // eslint-disable-next-line no-param-reassign\n            failedMessage.requestState = 'failed';\n            messagesDispatcher({\n              type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n              payload: failedMessage,\n            });\n          });\n\n        // eslint-disable-next-line no-param-reassign\n        failedMessage.requestState = 'pending';\n        messagesDispatcher({\n          type: messageActionTypes.RESEND_MESSAGEGE_START,\n          payload: failedMessage,\n        });\n      }\n    } else {\n      // to alert user on console\n      // eslint-disable-next-line no-console\n      console.error('Message is not resendable');\n      logger.warning('Message is not resendable', failedMessage);\n    }\n  }, [currentGroupChannel, messagesDispatcher]);\n}\n\nexport default useResendMessageCallback;\n","import { useRef, useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendMessageCallback({ currentGroupChannel, onBeforeSendUserMessage }, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const messageInputRef = useRef(null);\n\n  const sendMessage = useCallback(\n    (quoteMessage = null) => {\n      const text = messageInputRef.current.value;\n      const createParamsDefault = (txt) => {\n        const message = (typeof txt === 'string') ? txt.trim() : txt;\n        const params = new sdk.UserMessageParams();\n        params.message = message;\n        if (quoteMessage) {\n          params.isReplyToChannel = true;\n          params.parentMessageId = quoteMessage.messageId;\n        }\n        return params;\n      };\n\n      const createCustomPrams = onBeforeSendUserMessage\n        && typeof onBeforeSendUserMessage === 'function';\n\n      if (createCustomPrams) {\n        logger.info('Channel: creating params using onBeforeSendUserMessage', onBeforeSendUserMessage);\n      }\n\n      const params = onBeforeSendUserMessage\n        ? onBeforeSendUserMessage(text, quoteMessage)\n        : createParamsDefault(text);\n\n      logger.info('Channel: Sending message has started', params);\n      const pendingMsg = currentGroupChannel.sendUserMessage(params, (res, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        let message = res;\n        let error = err;\n        if (swapParams) {\n          message = err;\n          error = res;\n        }\n        // sending params instead of pending message\n        // to make sure that we can resend the message once it fails\n        if (error) {\n          logger.warning('Channel: Sending message failed!', {\n            message,\n          });\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: pendingMsg,\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast());\n    },\n    [currentGroupChannel, onBeforeSendUserMessage],\n  );\n\n  return [messageInputRef, sendMessage];\n}\n","import { useCallback } from 'react';\n\nimport * as messageActionTypes from '../dux/actionTypes';\nimport * as utils from '../utils';\nimport * as topics from '../../../lib/pubSub/topics';\n\nexport default function useSendFileMessageCallback({\n  currentGroupChannel,\n  onBeforeSendFileMessage,\n  imageCompression = {},\n}, {\n  sdk,\n  logger,\n  pubSub,\n  messagesDispatcher,\n}) {\n  const sendMessage = useCallback((file, quoteMessage = null) => {\n    const {\n      compressionRate,\n      resizingWidth,\n      resizingHeight,\n    } = imageCompression;\n    const createCustomParams = onBeforeSendFileMessage && typeof onBeforeSendFileMessage === 'function';\n\n    const compressibleFileType = (file.type === 'image/jpg' || file.type === 'image/png' || file.type === 'image/jpeg');\n    const compressibleRatio = (compressionRate > 0) && (compressionRate < 1);\n    // pxToNumber returns null if values are invalid\n    const compressibleDiamensions = utils.pxToNumber(resizingWidth)\n      || utils.pxToNumber(resizingHeight);\n\n    const canCompressImage = compressibleFileType && (compressibleRatio || compressibleDiamensions);\n\n    const createParamsDefault = (file_) => {\n      const params = new sdk.FileMessageParams();\n      params.file = file_;\n      if (quoteMessage) {\n        params.isReplyToChannel = true;\n        params.parentMessageId = quoteMessage.messageId;\n      }\n      return params;\n    };\n\n    if (canCompressImage) { // Using image compression\n      try {\n        const image = document.createElement('img');\n        image.src = URL.createObjectURL(file);\n        image.onload = () => {\n          URL.revokeObjectURL(image.src);\n          const canvas = document.createElement('canvas');\n          const imageWdith = image.naturalWidth || image.width;\n          const imageHeight = image.naturalHeight || image.height;\n\n          let targetWidth = utils.pxToNumber(resizingWidth) || imageWdith;\n          let targetHeight = utils.pxToNumber(resizingHeight) || imageHeight;\n\n          // In canvas.toBlob(callback, mimeType, qualityArgument)\n          // qualityArgument doesnt work\n          // so in case compressibleDiamensions are not present, we use ratio\n          if (file.type === 'image/png' && !compressibleDiamensions) {\n            targetWidth *= compressionRate;\n            targetHeight *= compressionRate;\n          }\n\n          canvas.width = targetWidth;\n          canvas.height = targetHeight;\n          const context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, targetWidth, targetHeight);\n          context.canvas.toBlob(\n            (newImageBlob) => {\n              const compressedFile = new File([newImageBlob], file.name, { type: file.type });\n              if (createCustomParams) {\n                logger.info('Channel: Creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n              }\n              const params = createCustomParams\n                ? onBeforeSendFileMessage(compressedFile, quoteMessage)\n                : createParamsDefault(compressedFile);\n              logger.info('Channel: Uploading file message start!', params);\n              const pendingMessage = currentGroupChannel.sendFileMessage(\n                params,\n                (response, err) => {\n                  const swapParams = sdk.getErrorFirstCallback();\n                  const [message, error] = swapParams ? [err, response] : [response, err];\n                  if (error) {\n                    // sending params instead of pending message\n                    // to make sure that we can resend the message once it fails\n                    logger.error('Channel: Sending file message failed!', { message, error });\n                    message.localUrl = URL.createObjectURL(compressedFile);\n                    message.file = compressedFile;\n                    messagesDispatcher({\n                      type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n                      payload: message,\n                    });\n                    return;\n                  }\n                  logger.info('Channel: Sending file message success!', message);\n                  messagesDispatcher({\n                    type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n                    payload: message,\n                  });\n                },\n              );\n              pubSub.publish(topics.SEND_MESSAGE_START, {\n                /* pubSub is used instead of messagesDispatcher\n                  to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n                message: {\n                  ...pendingMessage,\n                  url: URL.createObjectURL(compressedFile),\n                  // pending thumbnail message seems to be failed\n                  requestState: 'pending',\n                },\n                channel: currentGroupChannel,\n              });\n              setTimeout(() => utils.scrollIntoLast(), 1000);\n            },\n            file.type,\n            compressionRate,\n          );\n        };\n      } catch (error) {\n        logger.error('Channel: Sending file message failed!', error);\n      }\n    } else { // Not using image compression\n      if (createCustomParams) {\n        logger.info('Channel: creating params using onBeforeSendFileMessage', onBeforeSendFileMessage);\n      }\n      const params = onBeforeSendFileMessage\n        ? onBeforeSendFileMessage(file, quoteMessage)\n        : createParamsDefault(file);\n      logger.info('Channel: Uploading file message start!', params);\n\n      const pendingMsg = currentGroupChannel.sendFileMessage(params, (response, err) => {\n        const swapParams = sdk.getErrorFirstCallback();\n        const [message, error] = swapParams ? [err, response] : [response, err];\n        if (error) {\n          // sending params instead of pending message\n          // to make sure that we can resend the message once it fails\n          logger.error('Channel: Sending file message failed!', { message, error });\n          message.localUrl = URL.createObjectURL(file);\n          message.file = file;\n          messagesDispatcher({\n            type: messageActionTypes.SEND_MESSAGEGE_FAILURE,\n            payload: message,\n          });\n          return;\n        }\n        logger.info('Channel: Sending message success!', message);\n        messagesDispatcher({\n          type: messageActionTypes.SEND_MESSAGEGE_SUCESS,\n          payload: message,\n        });\n      });\n      pubSub.publish(topics.SEND_MESSAGE_START, {\n        /* pubSub is used instead of messagesDispatcher\n          to avoid redundantly calling `messageActionTypes.SEND_MESSAGEGE_START` */\n        message: {\n          ...pendingMsg,\n          url: URL.createObjectURL(file),\n          // pending thumbnail message seems to be failed\n          requestState: 'pending',\n        },\n        channel: currentGroupChannel,\n      });\n      setTimeout(() => utils.scrollIntoLast(), 1000);\n    }\n  }, [currentGroupChannel, onBeforeSendFileMessage, imageCompression]);\n  return [sendMessage];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst ReactionButton = React.forwardRef((props, ref) => {\n  const {\n    className,\n    width,\n    height,\n    selected,\n    onClick,\n    children,\n  } = props;\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-button${selected ? '--selected' : ''}`,\n      ].join(' ')}\n      ref={ref}\n      role=\"button\"\n      style={{\n        width: typeof width === 'string' ? `${width.slice(0, -2) - 2}px` : `${width - 2}px`,\n        height: typeof height === 'string' ? `${height.slice(0, -2) - 2}px` : `${height - 2}px`,\n      }}\n      onClick={(e) => onClick(e)}\n      onKeyDown={(e) => onClick(e)}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-button__inner\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nReactionButton.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  width: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  height: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  onClick: PropTypes.func,\n  children: PropTypes.element.isRequired,\n};\n\nReactionButton.defaultProps = {\n  className: '',\n  width: '36px',\n  height: '36px',\n  selected: false,\n  onClick: () => { },\n};\n\nexport default ReactionButton;\n","import React, { useMemo } from 'react';\n\nimport { EmojiListItems } from '../../../ui/ContextMenu';\nimport ReactionButton from '../../../ui/ReactionButton';\nimport ImageRenderer from '../../../ui/ImageRenderer';\nimport Icon, { IconTypes } from '../../../ui/Icon';\n\nexport default function useMemoizedEmojiListItems({\n  emojiContainer, toggleReaction,\n}, {\n  useReaction,\n  logger,\n  userId,\n  emojiAllList,\n}) {\n  /* eslint-disable react/prop-types */\n  return useMemo(() => ({\n    parentRef,\n    parentContainRef,\n    message,\n    closeDropdown,\n    spaceFromTrigger = {},\n  }) => {\n    if (!useReaction || !(parentRef || parentContainRef || message || closeDropdown)) {\n      logger.warning('Channel: Invalid Params in memoizedEmojiListItems');\n      return null;\n    }\n\n    return (\n      <EmojiListItems\n        parentRef={parentRef}\n        parentContainRef={parentContainRef}\n        closeDropdown={closeDropdown}\n        spaceFromTrigger={spaceFromTrigger}\n      >\n        {\n          emojiAllList.map((emoji) => {\n            const reactedReaction = message.reactions\n              .filter((reaction) => reaction.key === emoji.key)[0];\n            const isReacted = reactedReaction\n              ? !(reactedReaction.userIds.indexOf(userId) < 0)\n              : false;\n            return (\n              <ReactionButton\n                key={emoji.key}\n                width=\"36px\"\n                height=\"36px\"\n                selected={isReacted}\n                onClick={() => {\n                  closeDropdown();\n                  toggleReaction(message, emoji.key, isReacted);\n                }}\n              >\n                <ImageRenderer\n                  url={emoji.url}\n                  width=\"28px\"\n                  height=\"28px\"\n                  defaultComponent={\n                    <Icon width=\"28px\" height=\"28px\" type={IconTypes.QUESTION} />\n                  }\n                />\n              </ReactionButton>\n            );\n          })\n        }\n      </EmojiListItems>\n    );\n  }, [emojiContainer, toggleReaction]);\n}\n","import { useCallback } from 'react';\n\nexport default function useToggleReactionCallback({ currentGroupChannel }, { logger }) {\n  return useCallback((message, key, isReacted) => {\n    if (isReacted) {\n      currentGroupChannel.deleteReaction(message, key)\n        .then((res) => {\n          logger.info('Delete reaction success', res);\n        })\n        .catch((err) => {\n          logger.warning('Delete reaction failed', err);\n        });\n      return;\n    }\n    currentGroupChannel.addReaction(message, key)\n      .then((res) => {\n        logger.info('Add reaction success', res);\n      })\n      .catch((err) => {\n        logger.warning('Add reaction failed', err);\n      });\n  }, [currentGroupChannel]);\n}\n","import { useCallback } from 'react';\nimport { SendbirdTypes } from '../../../types';\nimport { Logger } from '../../../index';\n\ninterface DynamicParams {\n  setIntialTimeStamp(ts: number): null;\n  setAnimatedMessageId(id: number): null;\n  allMessages: SendbirdTypes['BaseMessageInstance'][];\n}\n\ninterface StaticParams {\n  logger: Logger;\n}\n\nfunction useScrollToMessage({\n  setIntialTimeStamp,\n  setAnimatedMessageId,\n  allMessages,\n}: DynamicParams,\n  { logger }: StaticParams,\n): (createdAt: number, messageId: number) => void {\n  return useCallback(\n    (createdAt: number, messageId: number) => {\n      const isPresent = allMessages.find((m) => (\n        m.messageId === messageId\n      ));\n      setAnimatedMessageId(null);\n      setTimeout(() => {\n        if (isPresent) {\n          logger.info('Channel: scroll to message - message is present');\n          setAnimatedMessageId(messageId);\n        } else {\n          logger.info('Channel: scroll to message - fetching older messages');\n          setIntialTimeStamp(null);\n          setIntialTimeStamp(createdAt);\n          setAnimatedMessageId(messageId);\n        }\n      });\n    }, [\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  ],\n  );\n}\n\nexport default useScrollToMessage;\n","import React, { useContext, useMemo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport format from 'date-fns/format';\n\nimport './index.scss';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelColors, LabelTypography } from '../Label';\nimport Loader from '../Loader';\n\nimport {\n  getOutgoingMessageState,\n  getOutgoingMessageStates,\n  isSentStatus,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nexport const MessageStatusTypes = getOutgoingMessageStates();\nexport default function MessageStatus({\n  className,\n  message,\n  channel,\n}) {\n  const { dateLocale } = useContext(LocalizationContext);\n  const showMessageStatusIcon = channel?.isGroupChannel()\n    && !channel?.isSuper\n    && !channel?.isPublic\n    && !channel?.isBroadcast;\n  const iconType = {\n    [MessageStatusTypes.SENT]: IconTypes.DONE,\n    [MessageStatusTypes.DELIVERED]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.READ]: IconTypes.DONE_ALL,\n    [MessageStatusTypes.FAILED]: IconTypes.ERROR,\n  };\n  const iconColor = {\n    [MessageStatusTypes.SENT]: IconColors.SENT,\n    [MessageStatusTypes.DELIVERED]: IconColors.SENT,\n    [MessageStatusTypes.READ]: IconColors.READ,\n    [MessageStatusTypes.FAILED]: IconColors.ERROR,\n  };\n\n  const messageStatus = useMemo(() => (\n    getOutgoingMessageState(channel, message)\n  ), [channel?.getUnreadMemberCount?.(message), channel?.getUndeliveredMemberCount?.(message)]);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-message-status',\n      ].join(' ')}\n    >\n      {(showMessageStatusIcon) && (\n        (messageStatus === MessageStatusTypes.PENDING) ? (\n          <Loader\n            className=\"sendbird-message-status__icon\"\n            width=\"16px\"\n            height=\"16px\"\n          >\n            <Icon\n              type={IconTypes.SPINNER}\n              fillColor={IconColors.PRIMARY}\n              width=\"16px\"\n              height=\"16px\"\n            />\n          </Loader>\n        ) : (\n          <Icon\n            className=\"sendbird-message-status__icon\"\n            type={iconType[messageStatus] || IconTypes.ERROR}\n            fillColor={iconColor[messageStatus]}\n            width=\"16px\"\n            height=\"16px\"\n          />\n        )\n      )}\n      {isSentStatus(messageStatus) && (\n        <Label\n          className=\"sendbird-message-status__text\"\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {format(message?.createdAt, 'p', { locale: dateLocale })}\n        </Label>\n      )}\n    </div>\n  );\n}\n\nMessageStatus.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  message: PropTypes.shape({\n    createdAt: PropTypes.number,\n    sender: PropTypes.shape({\n      friendName: PropTypes.string,\n      nickname: PropTypes.string,\n      userId: PropTypes.string,\n      profileUrl: PropTypes.string,\n    }),\n    sendingStatus: PropTypes.string,\n  }),\n  channel: PropTypes.shape({\n    isGroupChannel: PropTypes.func,\n    isSuper: PropTypes.bool,\n    isBroadcast: PropTypes.bool,\n    isPublic: PropTypes.bool,\n    getUnreadMemberCount: PropTypes.func,\n    getUndeliveredMemberCount: PropTypes.func,\n  }),\n};\n\nMessageStatus.defaultProps = {\n  className: '',\n  message: null,\n  channel: null,\n};\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { FileMessage, GroupChannel, OpenChannel, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { MenuItems, MenuItem } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport {\n  getClassName,\n  copyToClipboard,\n  isUserMessage,\n  isSentMessage,\n  isFailedMessage,\n  isPendingMessage,\n} from '../../utils/index';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  isByMe?: boolean;\n  disabled?: boolean;\n  replyType?: ReplyType;\n  showEdit?: (bool: boolean) => void;\n  showRecipients?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemMenu({\n  className,\n  message,\n  channel,\n  isByMe = false,\n  disabled = false,\n  replyType,\n  showEdit,\n                                          showRecipients,\n  showRemove,\n  resendMessage,\n  setQuoteMessage,\n  setSupposedHover,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  const showMenuItemCopy: boolean = isUserMessage(message as UserMessage);\n  const showMenuItemShowRecipients: boolean = true;\n  const showMenuItemReply: boolean = replyType === 'QUOTE_REPLY' && !isFailedMessage(channel, message) && !isPendingMessage(channel, message);\n  const showMenuItemEdit: boolean = (isUserMessage(message as UserMessage) && isSentMessage(channel, message) && isByMe);\n  const showMenuItemResend: boolean = (isFailedMessage(channel, message) && message?.isResendable?.() && isByMe);\n  const showMenuItemDelete: boolean = !isPendingMessage(channel, message) && isByMe;\n\n  if (!(showMenuItemCopy || showMenuItemReply || showMenuItemShowRecipients|| showMenuItemEdit || showMenuItemResend || showMenuItemDelete)) {\n    return null;\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-menu__trigger__icon\"\n              type={IconTypes.MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <MenuItems\n              className=\"sendbird-message-item-menu__list\"\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              openLeft={isByMe}\n            >\n              {showMenuItemCopy && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    copyToClipboard((message as UserMessage)?.message);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemShowRecipients && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-copy\"\n                  onClick={() => {\n                    showRecipients(true);\n                    closeDropdown();\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__COPY}\n                </MenuItem>\n              )}\n              {showMenuItemReply && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-reply\"\n                  onClick={() => {\n                    setQuoteMessage(message);\n                    closeDropdown();\n                  }}\n                  disable={message?.parentMessageId > 0}\n                >\n                  {stringSet.MESSAGE_MENU__REPLY}\n                </MenuItem>\n              )}\n              {showMenuItemEdit && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-edit\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showEdit(true);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__EDIT}\n                </MenuItem>\n              )}\n              {showMenuItemResend && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-resend\"\n                  onClick={() => {\n                    if (!disabled) {\n                      resendMessage(message);\n                      closeDropdown();\n                    }\n                  }}\n                >\n                  {stringSet.MESSAGE_MENU__RESEND}\n                </MenuItem>\n              )}\n              {showMenuItemDelete && (\n                <MenuItem\n                  className=\"sendbird-message-item-menu__list__menu-item menu-item-delete\"\n                  onClick={() => {\n                    if (!disabled) {\n                      showRemove(true);\n                      closeDropdown();\n                    }\n                  }}\n                  disable={message?.threadInfo?.replyCount > 0}\n                >\n                  {stringSet.MESSAGE_MENU__DELETE}\n                </MenuItem>\n              )}\n            </MenuItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React, { ReactElement, useRef } from 'react';\nimport { FileMessage, UserMessage, Emoji, Reaction, EmojiContainer, GroupChannel, OpenChannel } from 'sendbird';\nimport './index.scss';\n\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ImageRenderer from '../ImageRenderer';\nimport ReactionButton from '../ReactionButton';\nimport { getClassName, getEmojiListAll, isPendingMessage, isFailedMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage | FileMessage;\n  channel: GroupChannel | OpenChannel;\n  userId: string;\n  spaceFromTrigger?: Record<string, unknown>;\n  emojiContainer?: EmojiContainer;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setSupposedHover?: (bool: boolean) => void;\n}\n\nexport default function MessageItemReactionMenu({\n  className,\n  message,\n  channel,\n  userId,\n  spaceFromTrigger = {},\n  emojiContainer,\n  toggleReaction,\n  setSupposedHover,\n}: Props): ReactElement {\n  const triggerRef = useRef(null);\n  const containerRef = useRef(null);\n\n  if(isPendingMessage(channel, message) || isFailedMessage(channel, message)) {\n    return null;\n  }\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-item-reaction-menu'])}\n      ref={containerRef}\n    >\n      <ContextMenu\n        menuTrigger={(toggleDropdown: () => void): ReactElement => (\n          <IconButton\n            className=\"sendbird-message-item-reaction-menu__trigger\"\n            ref={triggerRef}\n            width=\"32px\"\n            height=\"32px\"\n            onClick={(): void => {\n              toggleDropdown();\n              setSupposedHover(true);\n            }}\n            onBlur={(): void => {\n              setSupposedHover(false);\n            }}\n          >\n            <Icon\n              className=\"sendbird-message-item-reaction-menu__trigger__icon\"\n              type={IconTypes.EMOJI_MORE}\n              fillColor={IconColors.CONTENT_INVERSE}\n              width=\"24px\"\n              height=\"24px\"\n            />\n          </IconButton>\n        )}\n        menuItems={(close: () => void): ReactElement => {\n          const closeDropdown = (): void => {\n            close();\n            setSupposedHover(false);\n          };\n          return (\n            <EmojiListItems\n              parentRef={triggerRef}\n              parentContainRef={containerRef}\n              closeDropdown={closeDropdown}\n              spaceFromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction) => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string) => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={() => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji.url}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style) => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          );\n        }}\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function Tooltip({\n  className,\n  children,\n}) {\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-tooltip__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONCONTENT_1}\n      >\n        {children}\n      </Label>\n    </div>\n  );\n}\n\nTooltip.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nTooltip.defaultProps = {\n  className: '',\n  children: '',\n};\n","import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\n\nconst SPACE_FROM_TRIGGER = 8;\n\nexport default function TooltipWrapper({\n  className,\n  children,\n  hoverTooltip,\n  // clickTooltip can be added later\n}) {\n  const [showHoverTooltip, setShowHoverTooltip] = useState(false);\n  const childrenRef = useRef(null);\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-tooltip-wrapper',\n      ].join(' ')}\n      onMouseOver={() => { setShowHoverTooltip(true); }}\n      onFocus={() => { setShowHoverTooltip(true); }}\n      onMouseOut={() => { setShowHoverTooltip(false); }}\n      onBlur={() => { setShowHoverTooltip(false); }}\n    >\n      <div\n        className=\"sendbird-tooltip-wrapper__children\"\n        ref={childrenRef}\n      >\n        {children}\n      </div>\n      {\n        showHoverTooltip && (\n          <div\n            className=\"sendbird-tooltip-wrapper__hover-tooltip\"\n            style={{ bottom: `calc(100% + ${SPACE_FROM_TRIGGER}px)` }}\n          >\n            <div className=\"sendbird-tooltip-wrapper__hover-tooltip__inner\">\n              <div\n                className=\"sendbird-tooltip-wrapper__hover-tooltip__inner__tooltip-container\"\n                style={{ left: childrenRef.current && `calc(${childrenRef.current.offsetWidth / 2}px - 50%)` }}\n              >\n                {hoverTooltip}\n              </div>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nTooltipWrapper.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  hoverTooltip: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]).isRequired,\n};\nTooltipWrapper.defaultProps = {\n  className: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Label, { LabelTypography, LabelColors } from '../Label';\n\nimport './index.scss';\n\nconst ReactionBadge = React.forwardRef((props, ref) => {\n  const {\n    className,\n    children,\n    count,\n    selected,\n    isAdd,\n    onClick,\n  } = props;\n\n  const getClassNameTail = () => {\n    if (selected && !isAdd) {\n      return '--selected';\n    }\n    if (isAdd) {\n      return '--is-add';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        `sendbird-reaction-badge${getClassNameTail()}`,\n      ].join(' ')}\n      role=\"button\"\n      ref={ref}\n      onClick={onClick}\n      onKeyDown={onClick}\n      tabIndex={0}\n    >\n      <div className=\"sendbird-reaction-badge__inner\">\n        <div className=\"sendbird-reaction-badge__inner__icon\">\n          {children}\n        </div>\n        <Label\n          className={(children && count) && 'sendbird-reaction-badge__inner__count'}\n          type={LabelTypography.CAPTION_3}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {count}\n        </Label>\n      </div>\n    </div>\n  );\n});\n\nReactionBadge.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  children: PropTypes.element.isRequired,\n  count: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  selected: PropTypes.bool,\n  isAdd: PropTypes.bool,\n  onClick: PropTypes.func,\n};\n\nReactionBadge.defaultProps = {\n  className: '',\n  count: '',\n  selected: false,\n  isAdd: false,\n  onClick: () => { },\n};\n\nexport default ReactionBadge;\n","import React, { ReactElement, useContext, useRef } from 'react';\nimport { Emoji, EmojiContainer, FileMessage, Reaction, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Tooltip from '../Tooltip';\nimport TooltipWrapper from '../TooltipWrapper';\nimport ReactionBadge from '../ReactionBadge';\nimport ReactionButton from '../ReactionButton';\nimport ImageRenderer from '../ImageRenderer';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ContextMenu, { EmojiListItems } from '../ContextMenu';\n\nimport { getClassName, getEmojiListAll, getEmojiMapAll, getEmojiTooltipString, isReactedBy } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  message: UserMessage | FileMessage;\n  emojiContainer: EmojiContainer;\n  memberNicknamesMap: Map<string, string>;\n  spaceFromTrigger?: Record<string, unknown>;\n  isByMe?: boolean;\n  toggleReaction?: (message: UserMessage | FileMessage, key: string, byMe: boolean) => void;\n}\n\nexport default function EmojiReactions2({\n  className,\n  userId,\n  message,\n  emojiContainer,\n  memberNicknamesMap,\n  spaceFromTrigger = {},\n  isByMe = false,\n  toggleReaction,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const emojisMap = getEmojiMapAll(emojiContainer);\n  const addReactionRef = useRef(null);\n\n  return (\n    <div className={getClassName([\n      className, 'sendbird-emoji-reactions',\n      isByMe ? 'outgoing' : 'incoming',\n    ])}>\n      {(message?.reactions?.length > 0) && (\n        message.reactions.map((reaction: Reaction): ReactElement => {\n          const reactedByMe = isReactedBy(userId, reaction);\n          return (\n            <TooltipWrapper\n              className=\"sendbird-emoji-reactions__reaction-badge\"\n              key={reaction?.key}\n              hoverTooltip={(reaction?.userIds?.length > 0) && (\n                <Tooltip>\n                  {getEmojiTooltipString(reaction, userId, memberNicknamesMap, stringSet)}\n                </Tooltip>\n              )}\n            >\n              <ReactionBadge\n                count={reaction.userIds.length}\n                selected={reactedByMe}\n                onClick={() => toggleReaction(message, reaction.key, reactedByMe)}\n              >\n                <ImageRenderer\n                  circle\n                  url={emojisMap.get(reaction?.key)?.url || ''}\n                  width=\"20px\"\n                  height=\"20px\"\n                  defaultComponent={(\n                    <Icon width=\"20px\" height=\"20px\" type={IconTypes.QUESTION} />\n                  )}\n                />\n              </ReactionBadge>\n            </TooltipWrapper>\n          );\n        })\n      )}\n      {(message?.reactions?.length < emojisMap.size) && (\n        <ContextMenu\n          menuTrigger={(toggleDropdown: () => void): ReactElement => (\n            <ReactionBadge\n              className=\"sendbird-emoji-reactions__add-reaction-badge\"\n              ref={addReactionRef}\n              isAdd\n              onClick={toggleDropdown}\n            >\n              <Icon\n                type={IconTypes.EMOJI_MORE}\n                fillColor={IconColors.ON_BACKGROUND_3}\n                width=\"20px\"\n                height=\"20px\"\n              />\n            </ReactionBadge>\n          )}\n          menuItems={(closeDropdown: () => void): ReactElement => (\n            <EmojiListItems\n              parentRef={addReactionRef}\n              parentContainRef={addReactionRef}\n              closeDropdown={closeDropdown}\n              spacefromTrigger={spaceFromTrigger}\n            >\n              {getEmojiListAll(emojiContainer).map((emoji: Emoji): ReactElement => {\n                const isReacted: boolean = message?.reactions?.\n                  filter((reaction: Reaction): boolean => reaction.key === emoji.key)[0]?.userIds?.\n                  some((reactorId: string): boolean => reactorId === userId);\n                return (\n                  <ReactionButton\n                    key={emoji.key}\n                    width=\"36px\"\n                    height=\"36px\"\n                    selected={isReacted}\n                    onClick={(): void => {\n                      closeDropdown();\n                      toggleReaction(message, emoji.key, isReacted);\n                    }}\n                  >\n                    <ImageRenderer\n                      url={emoji?.url || ''}\n                      width=\"28px\"\n                      height=\"28px\"\n                      placeHolder={(style: Record<string, unknown>): ReactElement => (\n                        <div style={style}>\n                          <Icon\n                            type={IconTypes.QUESTION}\n                            fillColor={IconColors.ON_BACKGROUND_3}\n                            width=\"28px\"\n                            height=\"28px\"\n                          />\n                        </div>\n                      )}\n                    />\n                  </ReactionButton>\n                );\n              })}\n            </EmojiListItems>\n          )}\n        />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport Label, { LabelColors, LabelTypography } from '../Label';\n\nexport default function AdminMessage({\n  className,\n  message,\n}) {\n  if (!(message.isAdminMessage || message.messageType) || !message.isAdminMessage() || message.messageType !== 'admin') {\n    return null;\n  }\n  return (\n    <div\n      className={[\n        ...(Array.isArray(className) ? className : [className]),\n        'sendbird-admin-message',\n      ].join(' ')}\n    >\n      <Label\n        className=\"sendbird-admin-message__text\"\n        type={LabelTypography.CAPTION_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {message.message}\n      </Label>\n    </div>\n  );\n}\n\nAdminMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    messageType: PropTypes.string,\n    isAdminMessage: PropTypes.func,\n  }),\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n};\n\nAdminMessage.defaultProps = {\n  message: {},\n  className: '',\n};\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport {\n  getClassName,\n  isEditedMessage,\n} from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function TextMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Label\n      type={LabelTypography.BODY_1}\n      color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n    >\n      <p className={getClassName([\n        className,\n        'sendbird-text-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}>\n        {message?.message}\n        {\n          isEditedMessage(message) && (\n            <Label\n              className=\"sendbird-text-message-item-body__message edited\"\n              type={LabelTypography.BODY_1}\n              color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n            >\n              {` ${stringSet.MESSAGE_EDITED} `}\n            </Label>\n          )\n        }\n      </p>\n    </Label>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport TextButton from '../TextButton';\nimport { getClassName, getUIKitFileType, truncateString } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function FileMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-file-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <div className=\"sendbird-file-message-item-body__file-icon\">\n        <Icon\n          className={'sendbird-file-message-item-body__file-icon__icon'}\n          type={{\n            IMAGE: IconTypes.PHOTO,\n            VIDEO: IconTypes.PLAY,\n            AUDIO: IconTypes.FILE_AUDIO,\n            GIF: IconTypes.GIF,\n            OTHERS: IconTypes.FILE_DOCUMENT,\n          }[getUIKitFileType(message?.type)]}\n          fillColor={IconColors.PRIMARY}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n      <TextButton\n        className=\"sendbird-file-message-item-body__file-name\"\n        onClick={() => { window.open(message?.url) }}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <Label\n          className=\"sendbird-file-message-item-body__file-name__text\"\n          type={LabelTypography.BODY_1}\n          color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n        >\n          {truncateString(message?.name || message?.url)}\n        </Label>\n      </TextButton>\n    </div>\n  );\n}\n","import React, { ReactElement, useState } from 'react';\nimport { FileMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { getClassName, isGifMessage, isVideoMessage } from '../../utils';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: FileMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n  showFileViewer?: (bool: boolean) => void;\n}\n\nexport default function ThumbnailMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n  showFileViewer,\n}: Props): ReactElement {\n  const { thumbnails = [] } = message;\n  const thumbnailUrl: string = thumbnails.length > 0 ? thumbnails[0]?.url : '';\n  const [imageRendered, setImageRendered] = useState(false);\n\n  return (\n    <div\n      className={getClassName([\n        className,\n        'sendbird-thumbnail-message-item-body',\n        isByMe ? 'outgoing' : 'incoming',\n        mouseHover ? 'mouse-hover' : '',\n        message?.reactions?.length > 0 ? 'reactions' : '',\n      ])}\n      onClick={() => showFileViewer(true)}\n    >\n      <ImageRenderer\n        className=\"sendbird-thumbnail-message-item-body__thumbnail\"\n        url={thumbnailUrl || message?.url}\n        alt={message?.type}\n        width=\"360px\"\n        height=\"270px\"\n        onLoad={() => { setImageRendered(true) }}\n        placeHolder={(style) => (\n          <div\n            className=\"sendbird-thumbnail-message-item-body__placeholder\"\n            style={style}\n          >\n            <div className=\"sendbird-thumbnail-message-item-body__placeholder__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.PHOTO}\n                fillColor={IconColors.ON_BACKGROUND_2}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )}\n      />\n      {\n        (isVideoMessage(message) && !thumbnailUrl) && !imageRendered && (\n          <video className=\"sendbird-thumbnail-message-item-body__video\">\n            <source src={message?.url} type={message?.type} />\n          </video>\n        )\n      }\n      <div className=\"sendbird-thumbnail-message-item-body__image-cover\" />\n      {\n        (isVideoMessage(message) || isGifMessage(message)) && (\n          <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper\">\n            <div className=\"sendbird-thumbnail-message-item-body__icon-wrapper__icon\">\n              <Icon\n                type={isVideoMessage(message) ? IconTypes.PLAY : IconTypes.GIF}\n                fillColor={IconColors.GRAY}\n                width=\"34px\"\n                height=\"34px\"\n              />\n            </div>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport LinkLabel from '../LinkLabel';\nimport Icon, { IconTypes } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport {\n  getClassName,\n  isEditedMessage,\n  isUrl,\n} from '../../utils';\nimport uuidv4 from '../../utils/uuid';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  message: UserMessage;\n  isByMe?: boolean;\n  mouseHover?: boolean;\n}\n\nexport default function OGMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const openOGUrl = (): void => {\n    if (message?.ogMetaData?.url) window.open(message?.ogMetaData?.url);\n  };\n\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-og-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        key={uuidv4()}\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        <p className=\"sendbird-og-message-item-body__text-bubble\">\n          {\n            message?.message.split(' ').map((word: string) => (\n              isUrl(word)\n                ? (\n                  <LinkLabel\n                    className=\"sendbird-og-message-item-body__text-bubble__message\"\n                    key={uuidv4()}\n                    src={word}\n                    type={LabelTypography.BODY_1}\n                    color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n                  >\n                    {word}\n                  </LinkLabel>\n                )\n                : (`${word} `)\n            ))\n          }\n          {\n            isEditedMessage(message) && (\n              <Label\n                className=\"sendbird-og-message-item-body__text-bubble__message\"\n                type={LabelTypography.BODY_1}\n                color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n              >\n                {` ${stringSet.MESSAGE_EDITED} `}\n              </Label>\n            )\n          }\n        </p>\n      </Label>\n      <div\n        className=\"sendbird-og-message-item-body__og-thumbnail\"\n        onClick={openOGUrl}\n      >\n        <ImageRenderer\n          className=\"sendbird-og-message-item-body__og-thumbnail__image\"\n          url={message?.ogMetaData?.defaultImage?.url || ''}\n          alt={message?.ogMetaData?.defaultImage?.alt}\n          // TODO: Change fixing width and height lengths\n          width=\"320px\"\n          height=\"180px\"\n          defaultComponent={(\n            <div className=\"sendbird-og-message-item-body__og-thumbnail__place-holder\">\n              <Icon\n                className=\"sendbird-og-message-item-body__og-thumbnail__place-holder__icon\"\n                type={IconTypes.THUMBNAIL_NONE}\n                width=\"56px\"\n                height=\"56px\"\n              />\n            </div>\n          )}\n        />\n      </div>\n      <div\n        className=\"sendbird-og-message-item-body__description\"\n        onClick={openOGUrl}\n      >\n        {message?.ogMetaData?.title && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__title\"\n            type={LabelTypography.SUBTITLE_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.title}\n          </Label>\n        )}\n        {message?.ogMetaData?.description && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__description\"\n            type={LabelTypography.BODY_2}\n            color={LabelColors.ONBACKGROUND_1}\n          >\n            {message.ogMetaData.description}\n          </Label>\n        )}\n        {message?.ogMetaData?.url && (\n          <Label\n            className=\"sendbird-og-message-item-body__description__url\"\n            type={LabelTypography.CAPTION_3}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {message.ogMetaData.url}\n          </Label>\n        )}\n      </div>\n      <div className=\"sendbird-og-message-item-body__cover\" />\n    </div>\n  );\n}\n","import React, { ReactElement, useContext } from 'react';\nimport './index.scss';\n\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { CoreMessageType, getClassName } from '../../utils';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\ninterface Props {\n  className?: string | Array<string>;\n  isByMe?: boolean;\n  message: CoreMessageType;\n  mouseHover?: boolean;\n}\n\nexport default function UnknownMessageItemBody({\n  className,\n  message,\n  isByMe = false,\n  mouseHover = false,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className={getClassName([\n      className,\n      'sendbird-unknown-message-item-body',\n      isByMe ? 'outgoing' : 'incoming',\n      mouseHover ? 'mouse-hover' : '',\n      message?.reactions?.length > 0 ? 'reactions' : '',\n    ])}>\n      <Label\n        className=\"sendbird-unknown-message-item-body__header\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_1 : LabelColors.ONBACKGROUND_1}\n      >\n        {stringSet.UNKNOWN__UNKNOWN_MESSAGE_TYPE}\n      </Label>\n      <Label\n        className=\"sendbird-unknown-message-item-body__description\"\n        type={LabelTypography.BODY_1}\n        color={isByMe ? LabelColors.ONCONTENT_2 : LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.UNKNOWN__CANNOT_READ_MESSAGE}\n      </Label>\n    </div>\n  );\n}\n","import React, { ReactElement, useContext, useState } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport './index.scss';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport ImageRenderer from '../ImageRenderer';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport {\n  getClassName,\n  getUIKitFileType,\n  getUIKitFileTypes,\n  isFileMessage,\n  isGif,\n  isSupportedFileView,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideo,\n  truncateString,\n} from '../../utils';\ninterface Props {\n  message?: UserMessage | FileMessage;\n  userId?: string;\n  isByMe?: boolean;\n  className?: string | Array<string>;\n  onClick?: () => void;\n}\n\nexport default function QuoteMessage({\n  message,\n  userId = '',\n  isByMe = false,\n  className,\n  onClick,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n\n  const { parentMessage } = message;\n  const parentMessageSender = (parentMessage as UserMessage | FileMessage)?.sender;\n  const parentMessageSenderNickname = (userId === parentMessageSender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : parentMessageSender?.nickname;\n  const parentMessageUrl = (parentMessage as FileMessage)?.url || '';\n  const parentMessageType = (parentMessage as FileMessage)?.type;\n  const currentMessageSenderNickname = (userId === message?.sender?.userId) ? stringSet.QUOTED_MESSAGE__CURRENT_USER : message?.sender?.nickname;\n\n  const [isThumbnailLoaded, setThumbnailLoaded] = useState(false);\n  const uikitFileTypes = getUIKitFileTypes();\n  const splitFileName = (parentMessage as FileMessage)?.name ? (parentMessage as FileMessage).name.split('/') : parentMessageUrl.split('/');\n\n  return (\n    <div\n      className={getClassName([className, 'sendbird-quote-message', isByMe ? 'outgoing' : 'incoming'])}\n      key={parentMessage?.messageId}\n      onClick={() => { if (onClick) onClick() }}\n    >\n      <div className=\"sendbird-quote-message__replied-to\">\n        <Icon\n          className=\"sendbird-quote-message__replied-to__icon\"\n          type={IconTypes.REPLY}\n          fillColor={IconColors.ON_BACKGROUND_3}\n          width=\"12px\"\n          height=\"12px\"\n        />\n        <Label\n          className=\"sendbird-quote-message__replied-to__text\"\n          type={LabelTypography.CAPTION_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {`${currentMessageSenderNickname} ${stringSet.QUOTED_MESSAGE__REPLIED_TO} ${parentMessageSenderNickname}`}\n        </Label>\n      </div>\n      <div className=\"sendbird-quote-message__replied-message\">\n        {/* text message */}\n        {(isUserMessage(parentMessage as UserMessage) && (parentMessage as UserMessage)?.message?.length > 0) && (\n          <div className=\"sendbird-quote-message__replied-message__text-message\">\n            <Label\n              className=\"sendbird-quote-message__replied-message__text-message__word\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_1}\n            >\n              {(parentMessage as UserMessage)?.message}\n            </Label>\n          </div>\n        )}\n        {/* thumbnail message */}\n        {(isThumbnailMessage(parentMessage as FileMessage) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__thumbnail-message\">\n            <ImageRenderer\n              className=\"sendbird-quote-message__replied-message__thumbnail-message__image\"\n              url={parentMessageUrl}\n              alt={parentMessageType}\n              width=\"144px\"\n              height=\"108px\"\n              onLoad={() => setThumbnailLoaded(true)}\n              defaultComponent={(\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__placeholder__icon\">\n                    <Icon\n                      type={isVideo(parentMessageType) ? IconTypes.PLAY : IconTypes.PHOTO}\n                      fillColor={IconColors.ON_BACKGROUND_2}\n                      width=\"22px\"\n                      height=\"22px\"\n                    />\n                  </div>\n                </div>\n              )}\n            />\n            {(isVideo(parentMessageType) && !((parentMessage as FileMessage)?.thumbnails?.length > 0)) && (\n              <>\n                <video className=\"sendbird-quote-message__replied-message__thumbnail-message__video\">\n                  <source src={parentMessageUrl} type={parentMessageType} />\n                </video>\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                  <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                    <Icon\n                      type={IconTypes.PLAY}\n                      fillColor={IconColors.GRAY}\n                      width=\"14px\"\n                      height=\"14px\"\n                    />\n                  </div>\n                </div>\n              </>\n            )}\n            {(isThumbnailLoaded && isGif(parentMessageType)) && (\n              <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover\">\n                <div className=\"sendbird-quote-message__replied-message__thumbnail-message__cover__icon\">\n                  <Icon\n                    type={IconTypes.GIF}\n                    fillColor={IconColors.GRAY}\n                    width=\"14px\"\n                    height=\"14px\"\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n        {/* file message */}\n        {(isFileMessage(parentMessage as FileMessage) && !isSupportedFileView((parentMessage as FileMessage).type) && parentMessageUrl) && (\n          <div className=\"sendbird-quote-message__replied-message__file-message\">\n            <Icon\n              className=\"sendbird-quote-message__replied-message__file-message__type-icon\"\n              type={{\n                [uikitFileTypes.IMAGE]: IconTypes.PHOTO,\n                [uikitFileTypes.VIDEO]: IconTypes.PLAY,\n                [uikitFileTypes.AUDIO]: IconTypes.FILE_AUDIO,\n                [uikitFileTypes.GIF]: IconTypes.GIF,\n                [uikitFileTypes.OTHERS]: IconTypes.FILE_DOCUMENT,\n              }[getUIKitFileType(parentMessageType)]}\n              fillColor={IconColors.ON_BACKGROUND_3}\n              width=\"16px\"\n              height=\"16px\"\n            />\n            <Label\n              className=\"sendbird-quote-message__replied-message__file-message__file-name\"\n              type={LabelTypography.BODY_2}\n              color={LabelColors.ONBACKGROUND_3}\n            >\n              {truncateString(splitFileName[splitFileName.length - 1])}\n            </Label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, {\n  ReactElement,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport { GroupChannel, AdminMessage, UserMessage, FileMessage, EmojiContainer } from 'sendbird';\nimport format from 'date-fns/format';\nimport './index.scss';\n\nimport Avatar from '../Avatar';\nimport UserProfile from '../UserProfile';\nimport MessageStatus from '../MessageStatus';\nimport MessageItemMenu from '../MessageItemMenu';\nimport MessageItemReactionMenu from '../MessageItemReactionMenu';\nimport ContextMenu, { MenuItems } from '../ContextMenu';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport EmojiReactions from '../EmojiReactions';\n\nimport ClientAdminMessage from '../AdminMessage';\nimport TextMessageItemBody from '../TextMessageItemBody';\nimport FileMessageItemBody from '../FileMessageItemBody';\nimport ThumbnailMessageItemBody from '../ThumbnailMessageItemBody';\nimport OGMessageItemBody from '../OGMessageItemBody';\nimport UnknownMessageItemBody from '../UnknownMessageItemBody';\nimport QuoteMessage from '../QuoteMessage';\n\nimport {\n  getClassName,\n  getUIKitMessageTypes,\n  getUIKitMessageType,\n  isTextMessage,\n  isOGMessage,\n  isThumbnailMessage,\n  getSenderName,\n} from '../../utils';\nimport { UserProfileContext } from '../../lib/UserProfileContext';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport { ReplyType } from '../../index.js';\n\ninterface Props {\n  className?: string | Array<string>;\n  userId: string;\n  channel: GroupChannel;\n  message: AdminMessage | UserMessage | FileMessage;\n  disabled?: boolean;\n  chainTop?: boolean;\n  chainBottom?: boolean;\n  useReaction?: boolean;\n  replyType?: ReplyType;\n  nicknamesMap?: Map<string, string>;\n  emojiContainer?: EmojiContainer;\n  scrollToMessage?: (createdAt: number, messageId: number) => void;\n  showEdit?: (bool: boolean) => void;\n  showRecipients?: (bool: boolean) => void;\n  showRemove?: (bool: boolean) => void;\n  showFileViewer?: (bool: boolean) => void;\n  resendMessage?: (message: UserMessage | FileMessage) => void;\n  toggleReaction?: (message: UserMessage | FileMessage, reactionKey: string, isReacted: boolean) => void;\n  setQuoteMessage?: (message: UserMessage | FileMessage) => void;\n}\nexport default function MessageContent({\n  className,\n  userId,\n  channel,\n  message,\n  disabled = false,\n  chainTop = false,\n  chainBottom = false,\n  useReaction = false,\n  replyType,\n  nicknamesMap,\n  emojiContainer,\n  scrollToMessage,\n  showEdit,\n                                         showRecipients,\n  showRemove,\n  showFileViewer,\n  resendMessage,\n  toggleReaction,\n  setQuoteMessage,\n}: Props): ReactElement {\n  const messageTypes = getUIKitMessageTypes();\n  const { disableUserProfile, renderUserProfile } = useContext(UserProfileContext);\n  const { dateLocale } = useContext(LocalizationContext);\n  const avatarRef = useRef(null);\n  const [mouseHover, setMouseHover] = useState(false);\n  const [supposedHover, setSupposedHover] = useState(false);\n\n  const isByMe = (userId === (message as UserMessage | FileMessage)?.sender?.userId)\n    || ((message as UserMessage | FileMessage).sendingStatus === 'pending')\n    || ((message as UserMessage | FileMessage).sendingStatus === 'failed');\n  const isByMeClassName = isByMe ? 'outgoing' : 'incoming';\n  const chainTopClassName = chainTop ? 'chain-top' : '';\n  const useReactionClassName = useReaction ? 'use-reactions' : '';\n  const supposedHoverClassName = supposedHover ? 'supposed-hover' : '';\n  const useReplying = !!((replyType === 'QUOTE_REPLY') && message?.parentMessageId && message?.parentMessage);\n  const useReplyingClassName = useReplying ? 'use-quote' : '';\n  if (message?.isAdminMessage?.() || message?.messageType === 'admin') {\n    return (<ClientAdminMessage message={message} />);\n  }\n  return (\n    <div\n      className={getClassName([className, 'sendbird-message-content', isByMeClassName])}\n      onMouseOver={() => setMouseHover(true)}\n      onMouseLeave={() => setMouseHover(false)}\n    >\n      {/* left */}\n      <div className={getClassName(['sendbird-message-content__left', useReactionClassName, isByMeClassName, useReplyingClassName])}>\n        {(!isByMe && !chainBottom) && (\n          /** user profile */\n          <ContextMenu\n            menuTrigger={(toggleDropdown: () => void): ReactElement => (\n              <Avatar\n                className=\"sendbird-message-content__left__avatar\"\n                src={message?.sender?.profileUrl || ''}\n                ref={avatarRef}\n                width=\"28px\"\n                height=\"28px\"\n                onClick={(): void => { if (!disableUserProfile) toggleDropdown() }}\n              />\n            )}\n            menuItems={(closeDropdown: () => void): ReactElement => (\n              <MenuItems\n                /**\n                * parentRef: For catching location(x, y) of MenuItems\n                * parentContainRef: For toggling more options(menus & reactions)\n                */\n                parentRef={avatarRef}\n                parentContainRef={avatarRef}\n                closeDropdown={closeDropdown}\n                style={{ paddingTop: 0, paddingBottom: 0 }}\n              >\n                {renderUserProfile\n                  ? renderUserProfile({ user: message?.sender, close: closeDropdown })\n                  : (<UserProfile user={message.sender} onSuccess={closeDropdown} />)\n                }\n              </MenuItems>\n            )}\n          />\n        )}\n        {/* outgoing menu */}\n        {isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', useReactionClassName, supposedHoverClassName, isByMeClassName])}>\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n          </div>\n        )}\n      </div>\n      {/* middle */}\n      <div className=\"sendbird-message-content__middle\">\n        {(!isByMe && !chainTop && !useReplying) && (\n          <Label\n            className=\"sendbird-message-content__middle__sender-name\"\n            type={LabelTypography.CAPTION_2}\n            color={LabelColors.ONBACKGROUND_2}\n          >\n            {getSenderName(message)}\n          </Label>\n        )}\n        {/* quote message */}\n        {(useReplying) ? (\n          <div className={getClassName(['sendbird-message-content__middle__quote-message', isByMe ? 'outgoing' : 'incoming', useReplyingClassName])}>\n            <QuoteMessage\n              message={message}\n              userId={userId}\n              isByMe={isByMe}\n              onClick={() => {\n                if (message?.parentMessage?.createdAt && message?.parentMessageId) {\n                  scrollToMessage(message.parentMessage.createdAt, message.parentMessageId);\n                }\n              }}\n            />\n          </div>\n        ) : null}\n        {/* container: message item body + emoji reactions */}\n        <div className={getClassName(['sendbird-message-content__middle__body-container'])} >\n          {/* message status component */}\n          {(isByMe && !chainBottom) && (\n            <div className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'left', supposedHoverClassName])}>\n              <div className=\"sendbird-message-content__middle__body-container__created-at__component-container\">\n                <MessageStatus\n                  message={message}\n                  channel={channel}\n                />\n              </div>\n            </div>\n          )}\n          {/* message item body components */}\n          {isTextMessage(message as UserMessage) && (\n            <TextMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isOGMessage(message as UserMessage)) && (\n            <OGMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as UserMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.FILE) && (\n            <FileMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {(isThumbnailMessage(message as FileMessage)) && (\n            <ThumbnailMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message as FileMessage}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n              showFileViewer={showFileViewer}\n            />\n          )}\n          {(getUIKitMessageType((message as FileMessage)) === messageTypes.UNKNOWN) && (\n            <UnknownMessageItemBody\n              className=\"sendbird-message-content__middle__message-item-body\"\n              message={message}\n              isByMe={isByMe}\n              mouseHover={mouseHover}\n            />\n          )}\n          {/* reactions */}\n          {(useReaction && message?.reactions?.length > 0) && (\n            <div className={getClassName([\n              'sendbird-message-content-reactions',\n              (!isByMe || isThumbnailMessage(message as FileMessage) || isOGMessage(message as UserMessage)) ? '' : 'primary',\n              mouseHover ? 'mouse-hover' : '',\n            ])}>\n              <EmojiReactions\n                userId={userId}\n                message={message}\n                isByMe={isByMe}\n                emojiContainer={emojiContainer}\n                memberNicknamesMap={nicknamesMap}\n                toggleReaction={toggleReaction}\n              />\n            </div>\n          )}\n          {(!isByMe && !chainBottom) && (\n            <Label\n              className={getClassName(['sendbird-message-content__middle__body-container__created-at', 'right', supposedHoverClassName])}\n              type={LabelTypography.CAPTION_3}\n              color={LabelColors.ONBACKGROUND_2}\n            >\n              {format(message.createdAt, 'p', { locale: dateLocale })}\n            </Label>\n          )}\n        </div>\n      </div>\n      {/* right */}\n      <div className={getClassName(['sendbird-message-content__right', chainTopClassName, useReactionClassName, useReplyingClassName])}>\n        {/* incoming menu */}\n        {!isByMe && (\n          <div className={getClassName(['sendbird-message-content-menu', chainTopClassName, supposedHoverClassName, isByMeClassName])}>\n            {useReaction && (\n              <MessageItemReactionMenu\n                className=\"sendbird-message-content-menu__reaction-menu\"\n                message={message as UserMessage | FileMessage}\n                channel={channel}\n                userId={userId}\n                spaceFromTrigger={{}}\n                emojiContainer={emojiContainer}\n                toggleReaction={toggleReaction}\n                setSupposedHover={setSupposedHover}\n              />\n            )}\n            <MessageItemMenu\n              className=\"sendbird-message-content-menu__normal-menu\"\n              channel={channel}\n              message={message as UserMessage | FileMessage}\n              isByMe={isByMe}\n              replyType={replyType}\n              disabled={disabled}\n              showEdit={showEdit}\n              showRecipients={showRecipients}\n              showRemove={showRemove}\n              resendMessage={resendMessage}\n              setQuoteMessage={setQuoteMessage}\n              setSupposedHover={setSupposedHover}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Modal from '../../../ui/Modal';\nimport { ButtonTypes } from '../../../ui/Button';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\nconst RemoveMessage = (props) => {\n  const {\n    onCloseModal,\n    onDeleteMessage,\n    message,\n  } = props;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <Modal\n      type={ButtonTypes.DANGER}\n      disabled={message?.threadInfo?.replyCount > 0}\n      onCancel={onCloseModal}\n      onSubmit={onDeleteMessage}\n      submitText=\"Delete\"\n      titleText={stringSet.MODAL__DELETE_MESSAGE__TITLE}\n    />\n  );\n};\n\nRemoveMessage.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  onDeleteMessage: PropTypes.func.isRequired,\n  message: PropTypes.shape({\n    threadInfo: PropTypes.shape({\n      replyCount: PropTypes.number,\n    }),\n  }).isRequired,\n};\n\nexport default RemoveMessage;\n","import React, {\n  useState,\n  useRef,\n  useMemo,\n  useLayoutEffect,\n  useContext,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport format from 'date-fns/format';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport MessageContent from '../../../ui/MessageContent';\nimport DateSeparator from '../../../ui/DateSeparator';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport MessageInput from '../../../ui/MessageInput';\nimport FileViewer from '../../../ui/FileViewer';\nimport RemoveMessageModal from './RemoveMessage';\nimport { getClassName } from '../../../utils';\n\nexport default function MessageHoc({\n  message,\n  userId,\n  disabled,\n  editDisabled,\n  hasSeparator,\n  deleteMessage,\n  updateMessage,\n  scrollToMessage,\n  resendMessage,\n  useReaction,\n  replyType,\n  chainTop,\n  chainBottom,\n  membersMap,\n  emojiContainer,\n  animatedMessageId,\n  highLightedMessageId,\n  toggleReaction,\n  quoteMessage,\n  setQuoteMessage,\n    showRecipients,\n  renderCustomMessage,\n  currentGroupChannel,\n  handleScroll,\n}) {\n  const { sender = {} } = message;\n  const [showEdit, setShowEdit] = useState(false);\n  const [showRemove, setShowRemove] = useState(false);\n  const [showFileViewer, setShowFileViewer] = useState(false);\n  const [isAnimated, setIsAnimated] = useState(false);\n  const [isHighlighted, setIsHighlighted] = useState(false);\n  const editMessageInputRef = useRef(null);\n  const useMessageScrollRef = useRef(null);\n\n  const { dateLocale } = useContext(LocalizationContext);\n  useLayoutEffect(() => {\n    handleScroll();\n  }, [showEdit, message?.reactions?.length]);\n\n  useLayoutEffect(() => {\n    if (highLightedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsAnimated(false);\n        setTimeout(() => {\n          setIsHighlighted(true);\n        }, 500);\n      }\n    } else {\n      setIsHighlighted(false);\n    }\n  }, [highLightedMessageId, useMessageScrollRef.current, message.messageId]);\n  useLayoutEffect(() => {\n    if (animatedMessageId === message.messageId) {\n      if (useMessageScrollRef && useMessageScrollRef.current) {\n        useMessageScrollRef.current.scrollIntoView({\n          block: 'center',\n          inline: 'center',\n        });\n        setIsHighlighted(false);\n        setTimeout(() => {\n          setIsAnimated(true);\n        }, 500);\n      }\n    } else {\n      setIsAnimated(false);\n    }\n  }, [animatedMessageId, useMessageScrollRef.current, message.messageId]);\n  const RenderedMessage = useMemo(() => {\n    if (renderCustomMessage) {\n      return renderCustomMessage(message, currentGroupChannel, chainTop, chainBottom);\n      // TODO: Let's change this to object type on next major version up\n      // and add params 'hasSeparator' and 'menuDisabled', scrollToMessage\n    }\n    return null;\n  }, [message, message.message, renderCustomMessage]);\n\n  const isByMe = (userId === sender?.userId)\n    || (message.requestState === 'pending')\n    || (message.requestState === 'failed');\n\n  if (RenderedMessage) {\n    return (\n      <div\n        ref={useMessageScrollRef}\n        className={getClassName([\n          'sendbird-msg-hoc sendbird-msg--scroll-ref',\n          isAnimated ? 'sendbird-msg-hoc__animated' : '',\n          isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n        ])}\n      >\n        {/* date-separator */}\n        {\n          hasSeparator && (\n            <DateSeparator>\n              <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n                {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n              </Label>\n            </DateSeparator>\n          )\n        }\n        <RenderedMessage message={message} />\n      </div>\n    );\n  }\n\n  if (showEdit) {\n    return (\n      <MessageInput\n        isEdit\n        disabled={editDisabled}\n        ref={editMessageInputRef}\n        name={message.messageId}\n        onSendMessage={updateMessage}\n        onCancelEdit={() => { setShowEdit(false); }}\n        value={message.message}\n      />\n    );\n  }\n\n  return (\n    <div\n      ref={useMessageScrollRef}\n      className={getClassName([\n        'sendbird-msg-hoc sendbird-msg--scroll-ref',\n        isAnimated ? 'sendbird-msg-hoc__animated' : '',\n        isHighlighted ? 'sendbird-msg-hoc__highlighted' : '',\n      ])}\n      style={{ marginBottom: '2px' }}\n    >\n      {/* date-separator */}\n      {\n        hasSeparator && (\n          <DateSeparator>\n            <Label type={LabelTypography.CAPTION_2} color={LabelColors.ONBACKGROUND_2}>\n              {format(message?.createdAt, 'MMMM dd, yyyy', { locale: dateLocale })}\n            </Label>\n          </DateSeparator>\n        )\n      }\n      {/* Message */}\n      <MessageContent\n        className=\"sendbird-message-hoc__message-content\"\n        userId={userId}\n        scrollToMessage={scrollToMessage}\n        channel={currentGroupChannel}\n        message={message}\n        disabled={disabled}\n        chainTop={chainTop}\n        chainBottom={chainBottom}\n        useReaction={useReaction}\n        replyType={replyType}\n        nicknamesMap={membersMap}\n        emojiContainer={emojiContainer}\n        showEdit={setShowEdit}\n        showRecipients={showRecipients}\n        showRemove={setShowRemove}\n        showFileViewer={setShowFileViewer}\n        resendMessage={resendMessage}\n        toggleReaction={toggleReaction}\n        quoteMessage={quoteMessage}\n        setQuoteMessage={setQuoteMessage}\n      />\n      {/* Modal */}\n      {\n        showRemove && (\n          <RemoveMessageModal\n            message={message}\n            onCloseModal={() => setShowRemove(false)}\n            onDeleteMessage={() => {\n              deleteMessage(message);\n              if (message?.messageId === quoteMessage?.messageId) {\n                setQuoteMessage(null);\n              }\n            }}\n          />\n        )\n      }\n      {\n        showFileViewer && (\n          <FileViewer\n            onClose={() => setShowFileViewer(false)}\n            message={message}\n            onDelete={() => {\n              deleteMessage(message, () => {\n                setShowFileViewer(false);\n              });\n            }}\n            isByMe={isByMe}\n          />\n        )\n      }\n    </div>\n  );\n}\n\nMessageHoc.propTypes = {\n  userId: PropTypes.string,\n  message: PropTypes.shape({\n    isFileMessage: PropTypes.func,\n    isAdminMessage: PropTypes.func,\n    isUserMessage: PropTypes.func,\n    isDateseparator: PropTypes.func,\n    // should be a number, but there's a bug in SDK shich returns string\n    messageId: PropTypes.number,\n    type: PropTypes.string,\n    createdAt: PropTypes.number,\n    message: PropTypes.string,\n    requestState: PropTypes.string,\n    messageType: PropTypes.string,\n    sender: PropTypes.shape({ userId: PropTypes.string }),\n    ogMetaData: PropTypes.shape({}),\n    parentMessageId: PropTypes.number,\n    reactions: PropTypes.arrayOf(PropTypes.number),\n  }),\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  currentGroupChannel: PropTypes.shape({}),\n  hasSeparator: PropTypes.bool,\n  disabled: PropTypes.bool,\n  editDisabled: PropTypes.bool,\n  deleteMessage: PropTypes.func.isRequired,\n  scrollToMessage: PropTypes.func,\n  updateMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  useReaction: PropTypes.bool.isRequired,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']).isRequired,\n  chainTop: PropTypes.bool.isRequired,\n  chainBottom: PropTypes.bool.isRequired,\n  membersMap: PropTypes.instanceOf(Map).isRequired,\n  emojiContainer: PropTypes.shape({\n    emojiCategories: PropTypes.arrayOf(PropTypes.shape({\n      emojis: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        url: PropTypes.string,\n      })),\n    })),\n  }),\n  toggleReaction: PropTypes.func,\n  quoteMessage: PropTypes.shape({\n    messageId: PropTypes.string,\n  }),\n  setQuoteMessage: PropTypes.func.isRequired,\n  handleScroll: PropTypes.func.isRequired,\n};\n\nMessageHoc.defaultProps = {\n  userId: '',\n  editDisabled: false,\n  renderCustomMessage: null,\n  currentGroupChannel: {},\n  message: {},\n  hasSeparator: false,\n  disabled: false,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  toggleReaction: () => { },\n  scrollToMessage: () => { },\n  emojiContainer: {},\n  quoteMessage: null,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport isSameDay from 'date-fns/isSameDay';\n\nimport './conversation-scroll.scss';\nimport * as messageActionTypes from '../dux/actionTypes';\n\nimport MessageHOC from './MessageHOC';\nimport { compareMessagesForGrouping } from '../utils';\nimport PlaceHolder, { PlaceHolderTypes } from '../../../ui/PlaceHolder';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nconst SCROLL_REF_CLASS_NAME = '.sendbird-msg--scroll-ref';\n\nexport default class ConversationScroll extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleScroll = () => {\n    const { scrollRef } = this?.props;\n    const current = scrollRef?.current;\n    if (current) {\n      const bottom = current.scrollHeight - current.scrollTop - current.offsetHeight;\n      const { scrollBottom = 0 } = this.state;\n      if (scrollBottom < bottom) {\n        current.scrollTop += bottom - scrollBottom;\n      }\n    }\n  }\n\n  onScroll = (e) => {\n    const {\n      scrollRef,\n      hasMore,\n      messagesDispatcher,\n      onScroll,\n      onScrollDown,\n      currentGroupChannel,\n    } = this.props;\n\n    const element = e.target;\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight,\n    } = element;\n    if (scrollTop === 0) {\n      if (!hasMore) {\n        return;\n      }\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const first = nodes && nodes[0];\n      onScroll(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          // Set block to nearest to prevent unexpected scrolling from outer components\n          try {\n            first.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    if (clientHeight + scrollTop === scrollHeight) {\n      const nodes = scrollRef.current.querySelectorAll(SCROLL_REF_CLASS_NAME);\n      const last = nodes && nodes[nodes.length - 1];\n      onScrollDown(([messages]) => {\n        if (messages) {\n          // https://github.com/scabbiaza/react-scroll-position-on-updating-dom\n          try {\n            last.scrollIntoView({ block: 'nearest' });\n          } catch (error) {\n            //\n          }\n        }\n      });\n    }\n\n    // do this later\n    setTimeout(() => {\n      // mark as read if scroll is at end\n      if (clientHeight + scrollTop === scrollHeight) {\n        messagesDispatcher({\n          type: messageActionTypes.MARK_AS_READ,\n        });\n        currentGroupChannel.markAsRead();\n      }\n\n      // save the lastest scroll bottom value\n      if (scrollRef?.current) {\n        const current = scrollRef?.current;\n        this.setState((state) => ({\n          ...state,\n          scrollBottom: current.scrollHeight - current.scrollTop - current.offsetHeight,\n        }), () => { });\n      }\n    }, 500);\n  }\n\n  render() {\n    const {\n      userId,\n      disabled,\n      scrollRef,\n      membersMap,\n      allMessages,\n      scrollToMessage,\n      useReaction,\n      replyType,\n      emojiAllMap,\n      editDisabled,\n      deleteMessage,\n      showRecipients,\n      updateMessage,\n      resendMessage,\n      renderCustomMessage,\n      renderChatItem,\n      animatedMessageId,\n      highLightedMessageId,\n      emojiContainer,\n      toggleReaction,\n      useMessageGrouping,\n      currentGroupChannel,\n      memoizedEmojiListItems,\n      showScrollBot,\n      onClickScrollBot,\n      quoteMessage,\n      setQuoteMessage,\n    } = this.props;\n\n    if (allMessages.length < 1) {\n      return (\n        <PlaceHolder\n          className=\"sendbird-conversation__no-messages\"\n          type={PlaceHolderTypes.NO_MESSAGES}\n        />\n      );\n    }\n\n    return (\n      <div className=\"sendbird-conversation__messages\">\n        <div className=\"sendbird-conversation__scroll-container\">\n          <div className=\"sendbird-conversation__padding\" />\n          {/*\n            To do: Implement windowing\n            Implement windowing if you are dealing with large number of messages/channels\n            https://github.com/bvaughn/react-window -> recommendation\n            We hesitate to bring one more dependency to our library,\n            we are planning to implement it inside the library\n          */}\n          <div\n            className=\"sendbird-conversation__messages-padding\"\n            ref={scrollRef}\n            onScroll={this.onScroll}\n          >\n            {\n              allMessages.map(\n                (m, idx) => {\n                  const previousMessage = allMessages[idx - 1];\n                  const nextMessage = allMessages[idx + 1];\n                  const [chainTop, chainBottom] = useMessageGrouping\n                    ? compareMessagesForGrouping(previousMessage, m, nextMessage)\n                    : [false, false];\n                  const previousMessageCreatedAt = previousMessage && previousMessage.createdAt;\n                  const currentCreatedAt = m.createdAt;\n                  // https://stackoverflow.com/a/41855608\n                  const hasSeparator = !(previousMessageCreatedAt && (\n                    isSameDay(currentCreatedAt, previousMessageCreatedAt)\n                  ));\n                  if (renderChatItem) {\n                    return (\n                      <div\n                        key={m.messageId || m.reqId}\n                        className=\"sendbird-msg--scroll-ref\"\n                      >\n                        {\n                          renderChatItem({\n                            message: m,\n                            animatedMessageId,\n                            highLightedMessageId,\n                            channel: currentGroupChannel,\n                            onDeleteMessage: deleteMessage,\n                            onUpdateMessage: updateMessage,\n                            onResendMessage: resendMessage,\n                            onScrollToMessage: scrollToMessage,\n                            onReplyMessage: setQuoteMessage,\n                            emojiContainer,\n                            chainTop,\n                            chainBottom,\n                            hasSeparator,\n                            menuDisabled: disabled,\n                          })\n                        }\n                      </div>\n                    );\n                  }\n\n                  return (\n                    <MessageHOC\n                      animatedMessageId={animatedMessageId}\n                      highLightedMessageId={highLightedMessageId}\n                      renderCustomMessage={renderCustomMessage}\n                      key={m.messageId || m.reqId}\n                      userId={userId}\n                      handleScroll={this.handleScroll}\n                      message={m}\n                      quoteMessage={quoteMessage}\n                      scrollToMessage={scrollToMessage}\n                      currentGroupChannel={currentGroupChannel}\n                      disabled={disabled}\n                      membersMap={membersMap}\n                      chainTop={chainTop}\n                      useReaction={useReaction}\n                      replyType={replyType}\n                      emojiAllMap={emojiAllMap}\n                      emojiContainer={emojiContainer}\n                      editDisabled={editDisabled}\n                      hasSeparator={hasSeparator}\n                      chainBottom={chainBottom}\n                      updateMessage={updateMessage}\n                      deleteMessage={deleteMessage}\n                      showRecipients={showRecipients}\n                      resendMessage={resendMessage}\n                      toggleReaction={toggleReaction}\n                      setQuoteMessage={setQuoteMessage}\n                      memoizedEmojiListItems={memoizedEmojiListItems}\n                    />\n                  );\n                },\n              )\n            }\n          </div>\n        </div>\n        {\n          showScrollBot && (\n            <div\n              className=\"sendbird-conversation__scroll-bottom-button\"\n              onClick={onClickScrollBot}\n              onKeyDown={onClickScrollBot}\n              tabIndex={0}\n              role=\"button\"\n            >\n              <Icon\n                width=\"24px\"\n                height=\"24px\"\n                type={IconTypes.CHEVRON_DOWN}\n                fillColor={IconColors.PRIMARY}\n              />\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nConversationScroll.propTypes = {\n  // https://stackoverflow.com/a/52646941\n  scrollRef: PropTypes.shape({\n    current: PropTypes.oneOfType([\n      PropTypes.element,\n      PropTypes.shape({}),\n    ]),\n  }).isRequired,\n  hasMore: PropTypes.bool,\n  messagesDispatcher: PropTypes.func.isRequired,\n  onScroll: PropTypes.func,\n  onScrollDown: PropTypes.func,\n  editDisabled: PropTypes.bool,\n  disabled: PropTypes.bool,\n  userId: PropTypes.string,\n  allMessages: PropTypes.arrayOf(PropTypes.shape({\n    createdAt: PropTypes.number,\n  })).isRequired,\n  deleteMessage: PropTypes.func.isRequired,\n  resendMessage: PropTypes.func.isRequired,\n  updateMessage: PropTypes.func.isRequired,\n  currentGroupChannel: PropTypes.shape({\n    markAsRead: PropTypes.func,\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n  animatedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  highLightedMessageId: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  renderChatItem: PropTypes.func,\n  renderCustomMessage: PropTypes.func,\n  scrollToMessage: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  showScrollBot: PropTypes.bool,\n  onClickScrollBot: PropTypes.func,\n  emojiContainer: PropTypes.shape({}),\n  emojiAllMap: PropTypes.instanceOf(Map),\n  membersMap: PropTypes.instanceOf(Map),\n  useMessageGrouping: PropTypes.bool,\n  toggleReaction: PropTypes.func,\n  memoizedEmojiListItems: PropTypes.func,\n  quoteMessage: PropTypes.shape({}),\n  setQuoteMessage: PropTypes.func.isRequired,\n};\n\nConversationScroll.defaultProps = {\n  hasMore: false,\n  editDisabled: false,\n  disabled: false,\n  userId: '',\n  renderCustomMessage: null,\n  renderChatItem: null,\n  animatedMessageId: null,\n  highLightedMessageId: null,\n  onScroll: null,\n  onScrollDown: null,\n  useReaction: true,\n  replyType: 'NONE',\n  emojiContainer: {},\n  showScrollBot: false,\n  onClickScrollBot: () => { },\n  scrollToMessage: () => { },\n  emojiAllMap: new Map(),\n  membersMap: new Map(),\n  useMessageGrouping: true,\n  toggleReaction: () => { },\n  memoizedEmojiListItems: () => '',\n  quoteMessage: null,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './notification.scss';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\nimport Icon, { IconTypes, IconColors } from '../../../ui/Icon';\n\nexport default function Notification({\n  count,\n  time,\n  onClick,\n}) {\n  const { stringSet } = useContext(LocalizationContext);\n  const timeArray = time.split(' ');\n  timeArray.splice(-2, 0, stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__ON);\n  return (\n    // eslint-disable-next-line\n    <div className=\"sendbird-notification\" onClick={onClick}>\n      <Label className=\"sendbird-notification__text\" color={LabelColors.ONCONTENT_1} type={LabelTypography.CAPTION_2}>\n        {`${count} `}\n        {stringSet.CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE}\n        {` ${timeArray.join(' ')}`}\n      </Label>\n      <Icon\n        width=\"24px\"\n        height=\"24px\"\n        type={IconTypes.CHEVRON_DOWN}\n        fillColor={IconColors.CONTENT}\n      />\n    </div>\n  );\n}\n\nNotification.propTypes = {\n  count: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  time: PropTypes.string,\n  onClick: PropTypes.func.isRequired,\n};\n\nNotification.defaultProps = {\n  count: 0,\n  time: '',\n};\n","import React, { useContext } from 'react';\n\nimport './notification.scss';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport Label, { LabelTypography } from '../../../ui/Label';\n\nconst FrozenNotification = (): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-notification sendbird-notification--frozen\">\n      <Label\n        className=\"sendbird-notification__text\"\n        type={LabelTypography.CAPTION_2}\n      >\n        {stringSet.CHANNEL_FROZEN}\n      </Label>\n    </div>\n  );\n}\n\nexport default FrozenNotification;\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\nimport { uuidv4 } from '../../../utils/uuid';\nimport Label, { LabelTypography, LabelColors } from '../../../ui/Label';\n\nconst TypingIndicatorText = ({ members }) => {\n  const { stringSet } = useContext(LocalizationContext);\n  if (!members || members.length === 0) {\n    return '';\n  }\n\n  if (members && members.length === 1) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__IS_TYPING}`;\n  }\n\n  if (members && members.length === 2) {\n    return `${members[0].nickname} ${stringSet.TYPING_INDICATOR__AND} ${members[1].nickname} ${stringSet.TYPING_INDICATOR__ARE_TYPING}`;\n  }\n\n  return stringSet.TYPING_INDICATOR__MULTIPLE_TYPING;\n};\n\nfunction TypingIndicator(props) {\n  const {\n    className,\n    channelUrl,\n    sb,\n    logger,\n  } = props;\n  const [handlerId, setHandlerId] = useState(uuidv4());\n  const [typingMembers, setTypingMembers] = useState([]);\n\n  useEffect(() => {\n    if (sb && sb.ChannelHandler) {\n      sb.removeChannelHandler(handlerId);\n      const newHandlerId = uuidv4();\n      const handler = new sb.ChannelHandler();\n      // there is a possible warning in here - setState called after unmount\n      handler.onTypingStatusUpdated = (groupChannel) => {\n        logger.info('Channel > Typing Indicator: onTypingStatusUpdated', groupChannel);\n        const members = groupChannel.getTypingMembers();\n        if (groupChannel.url === channelUrl) {\n          setTypingMembers(members);\n        }\n      };\n      sb.addChannelHandler(newHandlerId, handler);\n      setHandlerId(newHandlerId);\n    }\n\n    return () => {\n      setTypingMembers([]);\n      if (sb && sb.removeChannelHandler) {\n        sb.removeChannelHandler(handlerId);\n      }\n    };\n  }, [channelUrl]);\n\n  return (\n    <Label\n      className={className}\n      type={LabelTypography.CAPTION_2}\n      color={LabelColors.ONBACKGROUND_2}\n    >\n      <TypingIndicatorText members={typingMembers} />\n    </Label>\n  );\n}\n\nTypingIndicator.propTypes = {\n  className: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  channelUrl: PropTypes.string.isRequired,\n  sb: PropTypes.shape({\n    ChannelHandler: PropTypes.func,\n    removeChannelHandler: PropTypes.func,\n    addChannelHandler: PropTypes.func,\n  }).isRequired,\n  logger: PropTypes.shape({\n    info: PropTypes.func,\n  }).isRequired,\n};\nTypingIndicator.defaultProps = {\n  className: '',\n};\n\nexport default TypingIndicator;\n","import React, { ReactElement } from 'react';\nimport { FileMessage } from 'sendbird';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport ImageRenderer from '../ImageRenderer';\nimport { isAudioMessage, isFileMessage, isImageMessage, isThumbnailMessage } from '../../utils';\n\ninterface Props {\n  message: FileMessage;\n}\n\nconst componentClassname = 'sendbird-quote_message_input__avatar';\n\nexport default function QuoteMessageThumbnail({ message }: Props): ReactElement {\n  if (!isFileMessage(message)) {\n    return null;\n  }\n\n  const thumbnailUrl: string = (message.thumbnails && message.thumbnails.length > 0 && message.thumbnails[0].url)\n    || (isImageMessage(message) && message.url);\n  if (isThumbnailMessage(message) && thumbnailUrl) {\n    return (\n      <ImageRenderer\n        className={componentClassname}\n        url={thumbnailUrl}\n        alt={message.type}\n        width=\"44px\"\n        height=\"44px\"\n        fixedSize\n      />\n    );\n  } else if (isAudioMessage(message)) {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_AUDIO}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={componentClassname}>\n        <Icon\n          type={IconTypes.FILE_DOCUMENT}\n          fillColor={IconColors.ON_BACKGROUND_2}\n          width=\"24px\"\n          height=\"24px\"\n        />\n      </div>\n    );\n  }\n}\n","import React, { ReactElement, useContext } from 'react';\nimport { FileMessage, UserMessage } from 'sendbird';\nimport {\n  CoreMessageType,\n  getClassName,\n  isFileMessage,\n  isGifMessage,\n  isImageMessage,\n  isThumbnailMessage,\n  isUserMessage,\n  isVideoMessage,\n} from '../../utils';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport QuoteMessageThumbnail from './QuoteMessageThumbnail';\nimport './index.scss';\n\ninterface Props {\n  className?: string | Array<string>;\n  replyingMessage: CoreMessageType;\n  onClose?: (message: CoreMessageType) => void;\n}\n\nexport default function QuoteMessageInput({\n  className,\n  replyingMessage,\n  onClose,\n}: Props): ReactElement {\n  const { stringSet } = useContext(LocalizationContext);\n  const fileMessage = replyingMessage as FileMessage;\n  const sender = (replyingMessage as UserMessage | FileMessage)?.sender;\n\n  return (\n    <div className={getClassName(['sendbird-quote_message_input', className])}>\n      <QuoteMessageThumbnail message={fileMessage} />\n      <div\n        className=\"sendbird-quote_message_input__body\"\n        style={{\n          width: `calc(100% - ${fileMessage.isFileMessage() ? '164px' : '120px'})`,\n          left: fileMessage.isFileMessage() ? '92px' : '40px',\n        }}\n      >\n        <Label\n          className=\"sendbird-quote_message_input__body__sender-name\"\n          type={LabelTypography.CAPTION_1}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {`${stringSet.QUOTE_MESSAGE_INPUT__REPLY_TO} ${(sender && sender.nickname) ? sender.nickname : stringSet.NO_NAME}`}\n        </Label>\n        <Label\n          className=\"sendbird-quote_message_input__body__message-content\"\n          type={LabelTypography.BODY_2}\n          color={LabelColors.ONBACKGROUND_3}\n        >\n          {isImageMessage(fileMessage) && !isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE}\n          {isVideoMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO}\n          {isGifMessage(fileMessage) && stringSet.QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF}\n          {isUserMessage(replyingMessage as UserMessage) && (replyingMessage as UserMessage).message}\n          {(isFileMessage(fileMessage) && !isThumbnailMessage(fileMessage)) && fileMessage.name}\n        </Label>\n      </div>\n      <Icon\n        className=\"sendbird-quote_message_input__close-button\"\n        type={IconTypes.CLOSE}\n        fillColor={IconColors.ON_BACKGROUND_2}\n        width=\"24px\"\n        height=\"24px\"\n        onClick={() => onClose(replyingMessage)}\n      />\n    </div>\n  );\n}\n","// Logic required to handle message input rendering\n\nimport React, { useContext } from 'react';\nimport Sendbird, { FileMessage, UserMessage } from 'sendbird';\n\nimport './message-input-wrapper.scss';\nimport { RenderGroupChannelMessageInputProps } from '../../../index';\nimport * as utils from '../utils.js';\n\nimport MessageInput from '../../../ui/MessageInput';\nimport QuoteMessageInput from '../../../ui/QuoteMessageInput';\nimport { LocalizationContext } from '../../../lib/LocalizationContext';\n\ninterface Props {\n  channel: Sendbird.GroupChannel;\n  user: Sendbird.User;\n  isOnline: boolean;\n  initialized: boolean;\n  quoteMessage?: UserMessage | FileMessage;\n  onSendMessage: (quoteMessage?: UserMessage | FileMessage) => void;\n  onFileUpload: (file: File, quoteMessage?: UserMessage | FileMessage) => void;\n  setQuoteMessage: (message: UserMessage | FileMessage) => void;\n  renderMessageInput: (renderProps: RenderGroupChannelMessageInputProps) => JSX.Element;\n}\n\nconst MessageInputWrapper = ({\n  channel,\n  user,\n  isOnline,\n  initialized,\n  quoteMessage,\n  onSendMessage,\n  onFileUpload,\n  setQuoteMessage,\n  renderMessageInput,\n}: Props, ref: React.RefObject<HTMLInputElement>): JSX.Element => {\n  const { stringSet } = useContext(LocalizationContext);\n  const disabled = !initialized\n    || utils.isDisabledBecauseFrozen(channel)\n    || utils.isDisabledBecauseMuted(channel)\n    || !isOnline;\n\n  const isOperator = utils.isOperator(channel);\n  const { isBroadcast } = channel;\n\n  // custom message\n  if (renderMessageInput) {\n    return renderMessageInput({ channel, user, disabled, quoteMessage });\n  }\n\n  // broadcast channel + not operator\n  if (isBroadcast && !isOperator) {\n    return null;\n  }\n\n  // other conditions\n  return (\n    <div className=\"sendbird-message-input-wrapper\">\n      {quoteMessage && (\n        <div className=\"sendbird-message-input-wrapper__quote-message-input\">\n          <QuoteMessageInput\n            replyingMessage={quoteMessage}\n            onClose={() => setQuoteMessage(null)}\n          />\n        </div>\n      )}\n      <MessageInput\n        className=\"sendbird-message-input-wrapper__message-input\"\n        channelUrl={channel?.url}\n        placeholder={\n          (quoteMessage && stringSet.MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER)\n          || (utils.isDisabledBecauseFrozen(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__DISABLED)\n          || (utils.isDisabledBecauseMuted(channel) && stringSet.MESSAGE_INPUT__PLACE_HOLDER__MUTED)\n        }\n        ref={ref}\n        disabled={disabled}\n        onStartTyping={() => {\n          channel.startTyping();\n        }}\n        onSendMessage={() => {\n          onSendMessage(quoteMessage);\n          setQuoteMessage(null);\n        }}\n        onFileUpload={(file) => {\n          onFileUpload(file, quoteMessage);\n          setQuoteMessage(null);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default React.forwardRef(MessageInputWrapper);\n","import React, { useContext } from 'react';\n\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport { LocalizationContext } from '../../lib/LocalizationContext';\n\nimport './index.scss';\n\nfunction ConnectionStatus() {\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-connection-status\">\n      <Label\n        type={LabelTypography.BODY_2}\n        color={LabelColors.ONBACKGROUND_2}\n      >\n        {stringSet.TRYING_TO_CONNECT}\n      </Label>\n      <Icon\n        type={IconTypes.DISCONNECTED}\n        fillColor={IconColors.SENT}\n        width=\"14px\"\n        height=\"14px\"\n      />\n    </div>\n  );\n}\n\nexport default ConnectionStatus;\n","import formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { LabelStringSet } from '../Label';\n\nexport const prettyDate = (date) => formatDistanceToNowStrict(date, { addSuffix: true });\n\nexport const getChannelTitle = (channel = {}, currentUserId, stringSet = LabelStringSet) => {\n  if (!channel || (!channel.name && !channel.members)) {\n    return stringSet.NO_TITLE;\n  }\n  if (channel.name && channel.name !== 'Group Channel') {\n    return channel.name;\n  }\n\n  if (channel.members.length === 1) {\n    return stringSet.NO_MEMBERS;\n  }\n\n  return channel.members\n    .filter(({ userId }) => userId !== currentUserId)\n    .map(({ nickname }) => (nickname || stringSet.NO_NAME))\n    .join(', ');\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { LocalizationContext } from '../../lib/LocalizationContext';\nimport Label, { LabelTypography, LabelColors } from '../Label';\nimport Icon, { IconTypes, IconColors } from '../Icon';\nimport IconButton from '../IconButton';\nimport ChannelAvatar from '../ChannelAvatar/index';\n\nconst noop = () => { };\nexport default function ChatHeader(props) {\n  const {\n    currentGroupChannel,\n    currentUser,\n    title,\n    subTitle,\n    isMuted,\n    theme,\n    showSearchIcon,\n    onSearchClick,\n    onActionClick,\n  } = props;\n  const { userId } = currentUser;\n  const { stringSet } = useContext(LocalizationContext);\n  return (\n    <div className=\"sendbird-chat-header\">\n      <div className=\"sendbird-chat-header__left\">\n        <ChannelAvatar\n          theme={theme}\n          channel={currentGroupChannel}\n          userId={userId}\n          height={32}\n          width={32}\n        />\n        <Label\n          className=\"sendbird-chat-header__left__title\"\n          type={LabelTypography.H_2}\n          color={LabelColors.ONBACKGROUND_1}\n        >\n          {title || utils.getChannelTitle(currentGroupChannel, userId, stringSet)}\n        </Label>\n        <Label\n          className=\"sendbird-chat-header__left__subtitle\"\n          type={LabelTypography.BODY_1}\n          color={LabelColors.ONBACKGROUND_2}\n        >\n          {subTitle}\n        </Label>\n      </div>\n      <div className=\"sendbird-chat-header__right\">\n        {\n          ((typeof isMuted === 'string' && isMuted === 'true') || (typeof isMuted === 'boolean' && isMuted))\n            && (\n              <Icon\n                className=\"sendbird-chat-header__right__mute\"\n                type={IconTypes.NOTIFICATIONS_OFF_FILLED}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            )\n        }\n        {\n          showSearchIcon && (\n            <IconButton\n              className=\"sendbird-chat-header__right__search\"\n              width=\"32px\"\n              height=\"32px\"\n              onClick={onSearchClick}\n            >\n              <Icon\n                type={IconTypes.SEARCH}\n                fillColor={IconColors.PRIMARY}\n                width=\"24px\"\n                height=\"24px\"\n              />\n            </IconButton>\n          )\n        }\n        <IconButton\n          className=\"sendbird-chat-header__right__info\"\n          width=\"32px\"\n          height=\"32px\"\n          onClick={onActionClick}\n        >\n          <Icon\n            type={IconTypes.INFO}\n            fillColor={IconColors.PRIMARY}\n            width=\"24px\"\n            height=\"24px\"\n          />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nChatHeader.propTypes = {\n  currentGroupChannel: PropTypes.shape({\n    members: PropTypes.arrayOf(PropTypes.shape({})),\n    coverUrl: PropTypes.string,\n  }),\n  currentUser: PropTypes.shape({\n    userId: PropTypes.string,\n  }),\n  title: PropTypes.string,\n  subTitle: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.string,\n  ]),\n  isMuted: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  theme: PropTypes.string,\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onActionClick: PropTypes.func,\n};\n\nChatHeader.defaultProps = {\n  currentGroupChannel: {},\n  currentUser: {},\n  title: '',\n  subTitle: '',\n  isMuted: false,\n  theme: 'light',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  onActionClick: noop,\n};\n","import React, {\n  useEffect,\n  useRef,\n  useReducer,\n  useMemo,\n  useState,\n} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './index.scss';\nimport * as utils from './utils';\n\nimport { UserProfileProvider } from '../../lib/UserProfileContext';\nimport withSendbirdContext from '../../lib/SendbirdSdkContext';\nimport * as messageActionTypes from './dux/actionTypes';\nimport messagesInitialState from './dux/initialState';\nimport messagesReducer from './dux/reducers';\n\nimport useHandleChannelEvents from './hooks/useHandleChannelEvents';\nimport useGetChannel from './hooks/useGetChannel';\nimport useInitialMessagesFetch from './hooks/useInitialMessagesFetch';\nimport useHandleReconnect from './hooks/useHandleReconnect';\nimport useScrollCallback from './hooks/useScrollCallback';\nimport useScrollDownCallback from './hooks/useScrollDownCallback';\nimport useDeleteMessageCallback from './hooks/useDeleteMessageCallback';\nimport useUpdateMessageCallback from './hooks/useUpdateMessageCallback';\nimport useResendMessageCallback from './hooks/useResendMessageCallback';\nimport useSendMessageCallback from './hooks/useSendMessageCallback';\nimport useSendFileMessageCallback from './hooks/useSendFileMessageCallback';\nimport useMemoizedEmojiListItems from './hooks/useMemoizedEmojiListItems';\nimport useToggleReactionCallback from './hooks/useToggleReactionCallback';\nimport useScrollToMessage from './hooks/useScrollToMessage';\n\nimport ConversationScroll from './components/ConversationScroll';\nimport Notification from './components/Notification';\nimport FrozenNotification from './components/FrozenNotification';\nimport TypingIndicator from './components/TypingIndicator';\nimport MessageInputWrapper from './components/MessageInputWrapper';\nimport ConnectionStatus from '../../ui/ConnectionStatus';\nimport ChatHeader from '../../ui/ChatHeader';\nimport PlaceHolder, { PlaceHolderTypes } from '../../ui/PlaceHolder';\n\nconst noop = () => { };\n\nexport const ConversationPanel = (props) => {\n  const {\n    channelUrl,\n    stores: { sdkStore, userStore },\n    config: {\n      userId,\n      logger,\n      pubSub,\n      isOnline,\n      theme,\n      imageCompression,\n    },\n    dispatchers: {\n      reconnect,\n    },\n    queries = {},\n    startingPoint,\n    highlightedMessage,\n    useReaction,\n    replyType,\n    showSearchIcon,\n    onSearchClick,\n    renderChatItem,\n    renderChatHeader,\n    renderCustomMessage,\n    showRecipients,\n    renderUserProfile,\n    disableUserProfile,\n    renderMessageInput,\n    useMessageGrouping,\n    onChatHeaderActionClick,\n    onBeforeSendUserMessage,\n    onBeforeSendFileMessage,\n    onBeforeUpdateUserMessage,\n  } = props;\n  const { sdk } = sdkStore;\n  const { config } = props;\n  const sdkError = sdkStore.error;\n  const sdkInit = sdkStore.initialized;\n  const { user } = userStore;\n  if (queries.messageListQuery) {\n    // eslint-disable-next-line no-console\n    console.warn('messageListQuery has been deprecated, please use messageListParams instead');\n  }\n\n  useEffect(() => {\n    if (renderCustomMessage) {\n      // eslint-disable-next-line no-console\n      console.info('The parameter type of renderCustomMessage will be changed to the object in the next minor update.');\n    }\n  }, []);\n\n  const [intialTimeStamp, setIntialTimeStamp] = useState(startingPoint);\n  useEffect(() => {\n    setIntialTimeStamp(startingPoint);\n  }, [startingPoint, channelUrl]);\n  const [animatedMessageId, setAnimatedMessageId] = useState('');\n  const [highLightedMessageId, setHighLightedMessageId] = useState(highlightedMessage);\n  useEffect(() => {\n    setHighLightedMessageId(highlightedMessage);\n  }, [highlightedMessage]);\n  const userFilledMessageListQuery = queries.messageListParams;\n  const [quoteMessage, setQuoteMessage] = useState(null);\n\n  const [messagesStore, messagesDispatcher] = useReducer(messagesReducer, messagesInitialState);\n  const scrollRef = useRef(null);\n\n  const {\n    allMessages,\n    loading,\n    initialized,\n    unreadCount,\n    unreadSince,\n    isInvalid,\n    currentGroupChannel = {},\n    hasMore,\n    lastMessageTimeStamp,\n    hasMoreToBottom,\n    latestFetchedMessageTimeStamp,\n    emojiContainer,\n    readStatus,\n  } = messagesStore;\n  const { isFrozen, isBroadcast, isSuper } = currentGroupChannel;\n  const { appInfo = {} } = sdk;\n  const usingReaction = (\n    appInfo.isUsingReaction && !isBroadcast && !isSuper && useReaction\n    // TODO: Make useReaction independent from appInfo.isUsingReaction\n  );\n\n  const userDefinedDisableUserProfile = disableUserProfile || config.disableUserProfile;\n  const userDefinedRenderProfile = renderUserProfile || config.renderUserProfile;\n  const showScrollBot = hasMoreToBottom;\n\n  // TODO: emojiAllMap, emoijAllList, nicknamesMap => should be moved to messagesStore\n  const emojiAllMap = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisMapFromEmojiContainer(emojiContainer)\n      : new Map()\n  ), [emojiContainer]);\n  const emojiAllList = useMemo(() => (\n    usingReaction\n      ? utils.getAllEmojisFromEmojiContainer(emojiContainer)\n      : []\n  ), [emojiContainer]);\n  const nicknamesMap = useMemo(() => (\n    usingReaction\n      ? utils.getNicknamesMapFromMembers(currentGroupChannel.members)\n      : new Map()\n  ), [currentGroupChannel.members]);\n\n  // Scrollup is default scroll for channel\n  const onScrollCallback = useScrollCallback({\n    currentGroupChannel, lastMessageTimeStamp, userFilledMessageListQuery, replyType,\n  }, {\n    hasMore,\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const scrollToMessage = useScrollToMessage({\n    setIntialTimeStamp,\n    setAnimatedMessageId,\n    allMessages,\n  }, { logger });\n\n  // onScrollDownCallback is added for navigation to different timestamps on messageSearch\n  // hasMoreToBottom, onScrollDownCallback -> scroll down\n  // hasMore, onScrollCallback -> scroll up(default behavior)\n  const onScrollDownCallback = useScrollDownCallback({\n    currentGroupChannel,\n    latestFetchedMessageTimeStamp,\n    userFilledMessageListQuery,\n    hasMoreToBottom,\n    replyType,\n  }, {\n    logger,\n    messagesDispatcher,\n    sdk,\n  });\n\n  const toggleReaction = useToggleReactionCallback({ currentGroupChannel }, { logger });\n\n  const memoizedEmojiListItems = useMemoizedEmojiListItems({\n    emojiContainer, toggleReaction,\n  }, {\n    useReaction: usingReaction,\n    logger,\n    userId,\n    emojiAllList,\n  });\n\n  // to create message-datasource\n  // this hook sets currentGroupChannel asynchronously\n  useGetChannel(\n    { channelUrl, sdkInit },\n    { messagesDispatcher, sdk, logger },\n  );\n\n  useEffect(() => {\n    setQuoteMessage(null);\n  }, [channelUrl]);\n\n  // Hook to handle ChannelEvents and send values to useReducer using messagesDispatcher\n  useHandleChannelEvents(\n    { currentGroupChannel, sdkInit, hasMoreToBottom },\n    {\n      messagesDispatcher,\n      sdk,\n      logger,\n      scrollRef,\n      setQuoteMessage,\n    },\n  );\n\n  // hook that fetches messages when channel changes\n  // to be clear here useGetChannel sets currentGroupChannel\n  // and useInitialMessagesFetch executes when currentGroupChannel changes\n  // p.s This one executes on intialTimeStamp change too\n  useInitialMessagesFetch({\n    currentGroupChannel,\n    userFilledMessageListQuery,\n    intialTimeStamp,\n    replyType,\n  }, {\n    sdk,\n    logger,\n    messagesDispatcher,\n  });\n\n  // handles API calls from withSendbird\n  useEffect(() => {\n    const subScriber = utils.pubSubHandler(channelUrl, pubSub, messagesDispatcher);\n    return () => {\n      utils.pubSubHandleRemover(subScriber);\n    };\n  }, [channelUrl, sdkInit]);\n\n  // handling connection breaks\n  useHandleReconnect({ isOnline, replyType }, {\n    logger,\n    sdk,\n    currentGroupChannel,\n    messagesDispatcher,\n    userFilledMessageListQuery,\n  });\n\n  // callbacks for Message CURD actions\n  const deleteMessage = useDeleteMessageCallback({ currentGroupChannel, messagesDispatcher },\n    { logger });\n  const updateMessage = useUpdateMessageCallback(\n    { currentGroupChannel, messagesDispatcher, onBeforeUpdateUserMessage },\n    { logger, sdk, pubSub },\n  );\n  const resendMessage = useResendMessageCallback(\n    { currentGroupChannel, messagesDispatcher },\n    { logger },\n  );\n  const [messageInputRef, onSendMessage] = useSendMessageCallback(\n    { currentGroupChannel, onBeforeSendUserMessage },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n  const [onSendFileMessage] = useSendFileMessageCallback(\n    { currentGroupChannel, onBeforeSendFileMessage, imageCompression },\n    {\n      sdk,\n      logger,\n      pubSub,\n      messagesDispatcher,\n    },\n  );\n\n  if (!channelUrl) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.NO_CHANNELS} /></div>);\n  }\n  if (isInvalid) {\n    return (<div className=\"sendbird-conversation\"><PlaceHolder type={PlaceHolderTypes.WRONG} /></div>);\n  }\n  if (sdkError) {\n    return (\n      <div className=\"sendbird-conversation\">\n        <PlaceHolder\n          type={PlaceHolderTypes.WRONG}\n          retryToConnect={() => {\n            logger.info('Channel: reconnecting');\n            reconnect();\n          }}\n        />\n      </div>\n    );\n  }\n  return (\n    <UserProfileProvider\n      className=\"sendbird-conversation\"\n      disableUserProfile={userDefinedDisableUserProfile}\n      renderUserProfile={userDefinedRenderProfile}\n    >\n      {\n        renderChatHeader\n          ? renderChatHeader({ channel: currentGroupChannel, user })\n          : (\n            <ChatHeader\n              theme={theme}\n              currentGroupChannel={currentGroupChannel}\n              currentUser={user}\n              showSearchIcon={showSearchIcon}\n              onSearchClick={onSearchClick}\n              onActionClick={onChatHeaderActionClick}\n              subTitle={currentGroupChannel.members && currentGroupChannel.members.length !== 2}\n              isMuted={false}\n            />\n          )\n      }\n      {\n        isFrozen && (\n          <FrozenNotification />\n        )\n      }\n      {\n        unreadCount > 0 && (\n          <Notification\n            count={unreadCount}\n            onClick={() => {\n              if (intialTimeStamp) {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              } else {\n                utils.scrollIntoLast();\n                // there is no scroll\n                if (scrollRef.current.scrollTop === 0) {\n                  try {\n                    currentGroupChannel.markAsRead();\n                  } catch {\n                    //\n                  }\n                  messagesDispatcher({\n                    type: messageActionTypes.MARK_AS_READ,\n                  });\n                }\n              }\n            }}\n            time={unreadSince}\n          />\n        )\n      }\n      {\n        loading\n          ? (\n            <div className=\"sendbird-conversation\">\n              <PlaceHolder type={PlaceHolderTypes.LOADING} />\n            </div>\n          ) : (\n            <ConversationScroll\n              swapParams={\n                sdk && sdk.getErrorFirstCallback && sdk.getErrorFirstCallback()\n              }\n              animatedMessageId={animatedMessageId}\n              highLightedMessageId={highLightedMessageId}\n              userId={userId}\n              hasMore={hasMore}\n              disabled={!isOnline}\n              onScroll={onScrollCallback}\n              onScrollDown={onScrollDownCallback}\n              scrollRef={scrollRef}\n              readStatus={readStatus}\n              useReaction={usingReaction}\n              replyType={replyType}\n              allMessages={allMessages}\n              scrollToMessage={scrollToMessage}\n              emojiAllMap={emojiAllMap}\n              membersMap={nicknamesMap}\n              editDisabled={utils.isDisabledBecauseFrozen(currentGroupChannel)}\n              deleteMessage={deleteMessage}\n              showRecipients={showRecipients}\n              updateMessage={updateMessage}\n              resendMessage={resendMessage}\n              toggleReaction={toggleReaction}\n              emojiContainer={emojiContainer}\n              renderChatItem={renderChatItem}\n              quoteMessage={quoteMessage}\n              setQuoteMessage={setQuoteMessage}\n              showScrollBot={showScrollBot}\n              onClickScrollBot={() => {\n                setIntialTimeStamp(null);\n                setAnimatedMessageId(null);\n                setHighLightedMessageId(null);\n              }}\n              renderCustomMessage={renderCustomMessage}\n              useMessageGrouping={useMessageGrouping}\n              messagesDispatcher={messagesDispatcher}\n              currentGroupChannel={currentGroupChannel}\n              memoizedEmojiListItems={memoizedEmojiListItems}\n            />\n          )\n      }\n      <div className=\"sendbird-conversation__footer\">\n        <MessageInputWrapper\n          channel={currentGroupChannel}\n          user={user}\n          ref={messageInputRef}\n          isOnline={isOnline}\n          initialized={initialized}\n          onSendMessage={onSendMessage}\n          onFileUpload={onSendFileMessage}\n          quoteMessage={quoteMessage}\n          setQuoteMessage={setQuoteMessage}\n          renderMessageInput={renderMessageInput}\n        />\n        <div className=\"sendbird-conversation__footer__typing-indicator\">\n          <TypingIndicator className=\"sendbird-conversation__footer__typing-indicator__text\" channelUrl={channelUrl} sb={sdk} logger={logger} />\n          {\n            !isOnline && (\n              <ConnectionStatus sdkInit={sdkInit} sb={sdk} logger={logger} />\n            )\n          }\n        </div>\n      </div>\n    </UserProfileProvider>\n  );\n};\n\nConversationPanel.propTypes = {\n  channelUrl: PropTypes.string,\n  stores: PropTypes.shape({\n    sdkStore: PropTypes.shape({\n      initialized: PropTypes.bool,\n      sdk: PropTypes.shape({\n        getErrorFirstCallback: PropTypes.func,\n        removeChannelHandler: PropTypes.func,\n        GroupChannel: PropTypes.any,\n        ChannelHandler: PropTypes.any,\n        addChannelHandler: PropTypes.func,\n        UserMessageParams: PropTypes.any,\n        FileMessageParams: PropTypes.any,\n        getAllEmoji: PropTypes.func,\n        appInfo: PropTypes.shape({}),\n      }),\n      error: PropTypes.bool,\n    }),\n    userStore: PropTypes.shape({\n      user: PropTypes.shape({}),\n    }),\n  }).isRequired,\n  dispatchers: PropTypes.shape({\n    reconnect: PropTypes.func,\n  }).isRequired,\n  config: PropTypes.shape({\n    disableUserProfile: PropTypes.bool,\n    renderUserProfile: PropTypes.func,\n    userId: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    theme: PropTypes.string,\n    logger: PropTypes.shape({\n      info: PropTypes.func,\n      error: PropTypes.func,\n      warning: PropTypes.func,\n    }),\n    pubSub: PropTypes.shape({\n      subscribe: PropTypes.func,\n      publish: PropTypes.func,\n    }),\n    imageCompression: PropTypes.shape({\n      compressionRate: PropTypes.number,\n      resizingWidth: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n      resizingHeight: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n      ]),\n    }),\n  }).isRequired,\n  queries: PropTypes.shape({\n    messageListParams: PropTypes.shape({\n      includeMetaArray: PropTypes.bool,\n      includeParentMessageText: PropTypes.bool,\n      includeReaction: PropTypes.bool,\n      includeReplies: PropTypes.bool,\n      includeThreadInfo: PropTypes.bool,\n      limit: PropTypes.number,\n      reverse: PropTypes.bool,\n      senderUserIdsFilter: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  startingPoint: PropTypes.number,\n  highlightedMessage: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  onBeforeSendUserMessage: PropTypes.func, // onBeforeSendUserMessage(text)\n  onBeforeSendFileMessage: PropTypes.func, // onBeforeSendFileMessage(File)\n  onBeforeUpdateUserMessage: PropTypes.func,\n  renderChatItem: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderCustomMessage: PropTypes.func,\n  showRecipients: PropTypes.func,\n  renderMessageInput: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  renderChatHeader: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.func,\n  ]),\n  showSearchIcon: PropTypes.bool,\n  onSearchClick: PropTypes.func,\n  onChatHeaderActionClick: PropTypes.func,\n  useReaction: PropTypes.bool,\n  replyType: PropTypes.oneOf(['NONE', 'QUOTE_REPLY', 'THREAD']),\n  disableUserProfile: PropTypes.bool,\n  renderUserProfile: PropTypes.func,\n  useMessageGrouping: PropTypes.bool,\n};\n\nConversationPanel.defaultProps = {\n  channelUrl: null,\n  queries: {},\n  onBeforeSendUserMessage: null,\n  onBeforeSendFileMessage: null,\n  onBeforeUpdateUserMessage: null,\n  startingPoint: null,\n  highlightedMessage: null,\n  renderChatItem: null,\n  renderCustomMessage: null,\n  showRecipients: null,\n  renderMessageInput: null,\n  renderChatHeader: null,\n  useReaction: true,\n  replyType: 'NONE',\n  showSearchIcon: false,\n  onSearchClick: noop,\n  disableUserProfile: false,\n  renderUserProfile: null,\n  useMessageGrouping: true,\n  onChatHeaderActionClick: noop,\n};\n\nexport const {\n  getEmojiCategoriesFromEmojiContainer,\n  getAllEmojisFromEmojiContainer,\n  getEmojisFromEmojiContainer,\n} = utils;\n\nexport default withSendbirdContext(ConversationPanel);\n"],"names":["RESET_MESSAGES","RESET_STATE","CLEAR_SENT_MESSAGES","GET_PREV_MESSAGES_START","GET_PREV_MESSAGES_SUCESS","GET_NEXT_MESSAGES_SUCESS","GET_NEXT_MESSAGES_FAILURE","SEND_MESSAGEGE_START","SEND_MESSAGEGE_SUCESS","SEND_MESSAGEGE_FAILURE","RESEND_MESSAGEGE_START","ON_MESSAGE_RECEIVED","UPDATE_UNREAD_COUNT","ON_MESSAGE_UPDATED","ON_MESSAGE_THREAD_INFO_UPDATED","ON_MESSAGE_DELETED","ON_MESSAGE_DELETED_BY_REQ_ID","SET_CURRENT_CHANNEL","SET_CHANNEL_INVALID","MARK_AS_READ","ON_REACTION_UPDATED","SET_EMOJI_CONTAINER","MESSAGE_LIST_PARAMS_CHANGED","getOutgoingMessageStates","UNDEFINED","getSendingMessageStatus","SUCCEEDED","FAILED","PENDING","scrollIntoLast","intialTry","MAX_TRIES","currentTry","scrollDOM","document","querySelector","scrollTop","scrollHeight","error","setTimeout","pubSubHandleRemover","subscriber","forEach","s","remove","pubSubHandler","channelUrl","pubSub","dispatcher","Map","subscribe","set","topics","msg","channel","message","url","type","channelActions","payload","fromSelector","messageId","isOperator","groupChannel","myRole","isDisabledBecauseFrozen","isFrozen","isDisabledBecauseMuted","myMutedState","getEmojiCategoriesFromEmojiContainer","emojiContainer","emojiCategories","getAllEmojisFromEmojiContainer","allEmojis","categoryIndex","length","emojis","emojiIndex","push","getEmojisFromEmojiContainer","emojiCategoryId","filter","emojiCategory","id","getAllEmojisMapFromEmojiContainer","allEmojisMap","key","getNicknamesMapFromMembers","members","nicknamesMap","memberIndex","userId","nickname","getMessageCreatedAt","format","createdAt","isSameGroup","comparingMessage","messageType","sender","sendingStatus","compareMessagesForGrouping","prevMessage","currMessage","nextMessage","isAcceptable","hasOwnProperty","property","passUnsuccessfullMessages","allMessages","newMessage","lastIndexOfSucceededMessage","map","isAdminMessage","lastIndexOf","messages","splice","pxToNumber","px","parsed","Number","parseFloat","isNaN","initialized","loading","currentGroupChannel","hasMore","lastMessageTimeStamp","hasMoreToBottom","latestFetchedMessageTimeStamp","unreadCount","unreadSince","isInvalid","messageListParams","reducer","state","action","actionTypes","initialState","m","receivedMessages","stateChannel","stateChannelUrl","actionChannelUrl","duplicatedMessageIds","updatedAllMessages","duplicatedMessage","find","compareIds","updatedAt","filteredNewMessages","hasHasMoreToBottom","hasLatestFetchedMessageTimeStamp","newMessages","reqId","sort","a","b","failed","currentGroupChannelUrl","scrollToEnd","some","filterMessageListParams","Date","event","threadInfo","targetMessageId","applyReactionEvent","useHandleChannelEvents","sdkInit","messagesDispatcher","sdk","logger","scrollRef","setQuoteMessage","useEffect","messageReceiverId","uuidv4","ChannelHandler","info","onMessageReceived","current","offsetHeight","messageActions","markAsRead","warning","onReadReceiptUpdated","onDeliveryReceiptUpdated","onMessageUpdated","onThreadInfoUpdated","onMessageDeleted","_","onReactionUpdated","reactionEvent","onChannelChanged","onChannelFrozen","onChannelUnfrozen","onUserMuted","onUserUnmuted","onUserBanned","onOperatorUpdated","addChannelHandler","removeChannelHandler","useSetChannel","GroupChannel","getChannel","then","messageActionTypes","catch","e","getAllEmoji","emojiContainer_","err","PREV_RESULT_SIZE","NEXT_RESULT_SIZE","getLatestMessageTimeStamp","latestMessage","useInitialMessagesFetch","userFilledMessageListQuery","intialTimeStamp","replyType","MessageListParams","getMessagesByTimestamp","prevResultSize","isInclusive","includeReplies","includeReaction","includeThreadInfo","includeParentMessageInfo","Object","keys","nextResultSize","nextMessageListParams","getTime","nextMessages","finally","utils","useHandleReconnect","_a","_b","isOnline","wasOffline","useReaction","appInfo","isUsingReaction","messageListParams_1","lastMessageTime","useScrollCallback","useCallback","cb","hasMoreMessages","lastMessageTs","RESULT_SIZE","useScrollDownCallback","messagesLength","useDeleteMessageCallback","requestState","deleteMessage","useUpdateMessageCallback","onBeforeUpdateUserMessage","text","createParamsDefault","txt","params","UserMessageParams","createCustomPrams","updateUserMessage","r","swapParams","getErrorFirstCallback","publish","useResendMessageCallback","failedMessage","file","isResendable","resendUserMessage","resendFileMessage","console","useSendMessageCallback","onBeforeSendUserMessage","messageInputRef","useRef","sendMessage","quoteMessage","value","trim","isReplyToChannel","parentMessageId","pendingMsg","sendUserMessage","res","useSendFileMessageCallback","onBeforeSendFileMessage","imageCompression","compressionRate","resizingWidth","resizingHeight","createCustomParams","compressibleFileType","compressibleRatio","compressibleDiamensions","canCompressImage","file_","FileMessageParams","image","createElement","src","URL","createObjectURL","onload","revokeObjectURL","canvas","imageWdith","naturalWidth","width","imageHeight","naturalHeight","height","targetWidth","targetHeight","context","getContext","drawImage","toBlob","newImageBlob","compressedFile","File","name","pendingMessage","sendFileMessage","response","localUrl","ReactionButton","React","forwardRef","props","ref","className","selected","onClick","children","Array","isArray","join","slice","propTypes","PropTypes","oneOfType","string","arrayOf","number","bool","func","element","isRequired","defaultProps","useMemoizedEmojiListItems","toggleReaction","emojiAllList","useMemo","parentRef","parentContainRef","closeDropdown","spaceFromTrigger","EmojiListItems","emoji","reactedReaction","reactions","reaction","isReacted","userIds","indexOf","ImageRenderer","Icon","IconTypes","QUESTION","useToggleReactionCallback","deleteReaction","addReaction","useScrollToMessage","setIntialTimeStamp","setAnimatedMessageId","isPresent","MessageStatusTypes","MessageStatus","useContext","LocalizationContext","dateLocale","showMessageStatusIcon","isGroupChannel","isSuper","isPublic","isBroadcast","iconType","SENT","DONE","DELIVERED","DONE_ALL","READ","ERROR","iconColor","IconColors","messageStatus","getOutgoingMessageState","getUnreadMemberCount","getUndeliveredMemberCount","Loader","SPINNER","PRIMARY","isSentStatus","Label","LabelTypography","CAPTION_3","LabelColors","ONBACKGROUND_2","locale","shape","friendName","profileUrl","MessageItemMenu","_c","isByMe","_d","disabled","showEdit","showRecipients","showRemove","resendMessage","setSupposedHover","stringSet","triggerRef","containerRef","showMenuItemCopy","isUserMessage","showMenuItemShowRecipients","showMenuItemReply","isFailedMessage","isPendingMessage","showMenuItemEdit","isSentMessage","showMenuItemResend","showMenuItemDelete","getClassName","ContextMenu","toggleDropdown","IconButton","MORE","CONTENT_INVERSE","close","MenuItems","MenuItem","copyToClipboard","MESSAGE_MENU__COPY","MESSAGE_MENU__REPLY","MESSAGE_MENU__EDIT","MESSAGE_MENU__RESEND","replyCount","MESSAGE_MENU__DELETE","MessageItemReactionMenu","EMOJI_MORE","getEmojiListAll","reactorId","style","ON_BACKGROUND_3","Tooltip","CAPTION_2","ONCONTENT_1","SPACE_FROM_TRIGGER","TooltipWrapper","hoverTooltip","useState","showHoverTooltip","setShowHoverTooltip","childrenRef","bottom","left","offsetWidth","ReactionBadge","count","isAdd","getClassNameTail","ONBACKGROUND_1","EmojiReactions2","memberNicknamesMap","_e","emojisMap","getEmojiMapAll","addReactionRef","reactedByMe","isReactedBy","getEmojiTooltipString","get","size","AdminMessage","TextMessageItemBody","mouseHover","BODY_1","isEditedMessage","ONCONTENT_2","MESSAGE_EDITED","FileMessageItemBody","IMAGE","PHOTO","VIDEO","PLAY","AUDIO","FILE_AUDIO","GIF","OTHERS","FILE_DOCUMENT","getUIKitFileType","TextButton","window","open","truncateString","ThumbnailMessageItemBody","showFileViewer","_f","thumbnails","thumbnailUrl","_g","imageRendered","setImageRendered","isVideoMessage","ON_BACKGROUND_2","isGifMessage","GRAY","OGMessageItemBody","_k","_l","openOGUrl","ogMetaData","split","word","isUrl","LinkLabel","defaultImage","alt","THUMBNAIL_NONE","title","SUBTITLE_2","description","BODY_2","UnknownMessageItemBody","UNKNOWN__UNKNOWN_MESSAGE_TYPE","UNKNOWN__CANNOT_READ_MESSAGE","QuoteMessage","_p","_q","parentMessage","parentMessageSender","parentMessageSenderNickname","QUOTED_MESSAGE__CURRENT_USER","parentMessageUrl","parentMessageType","currentMessageSenderNickname","_r","isThumbnailLoaded","setThumbnailLoaded","uikitFileTypes","getUIKitFileTypes","splitFileName","REPLY","ONBACKGROUND_3","QUOTED_MESSAGE__REPLIED_TO","isThumbnailMessage","isVideo","isGif","isFileMessage","isSupportedFileView","MessageContent","chainTop","_h","chainBottom","_j","scrollToMessage","messageTypes","getUIKitMessageTypes","UserProfileContext","disableUserProfile","renderUserProfile","avatarRef","setMouseHover","_m","supposedHover","isByMeClassName","chainTopClassName","useReactionClassName","supposedHoverClassName","useReplying","useReplyingClassName","ClientAdminMessage","Avatar","paddingTop","paddingBottom","user","UserProfile","getSenderName","isTextMessage","isOGMessage","getUIKitMessageType","FILE","UNKNOWN","EmojiReactions","RemoveMessage","onCloseModal","onDeleteMessage","Modal","ButtonTypes","DANGER","MODAL__DELETE_MESSAGE__TITLE","MessageHoc","editDisabled","hasSeparator","updateMessage","membersMap","animatedMessageId","highLightedMessageId","renderCustomMessage","handleScroll","setShowEdit","setShowRemove","setShowFileViewer","isAnimated","setIsAnimated","isHighlighted","setIsHighlighted","editMessageInputRef","useMessageScrollRef","useLayoutEffect","scrollIntoView","block","inline","RenderedMessage","DateSeparator","MessageInput","marginBottom","RemoveMessageModal","FileViewer","isDateseparator","oneOf","instanceOf","SCROLL_REF_CLASS_NAME","ConversationScroll","scrollBottom","onScroll","onScrollDown","target","clientHeight","nodes","querySelectorAll","first","last","setState","emojiAllMap","renderChatItem","useMessageGrouping","memoizedEmojiListItems","showScrollBot","onClickScrollBot","PlaceHolder","PlaceHolderTypes","NO_MESSAGES","idx","previousMessage","previousMessageCreatedAt","currentCreatedAt","isSameDay","onUpdateMessage","onResendMessage","onScrollToMessage","onReplyMessage","menuDisabled","MessageHOC","CHEVRON_DOWN","Component","Notification","time","timeArray","CHANNEL__MESSAGE_LIST__NOTIFICATION__ON","CHANNEL__MESSAGE_LIST__NOTIFICATION__NEW_MESSAGE","CONTENT","FrozenNotification","CHANNEL_FROZEN","TypingIndicatorText","TYPING_INDICATOR__IS_TYPING","TYPING_INDICATOR__AND","TYPING_INDICATOR__ARE_TYPING","TYPING_INDICATOR__MULTIPLE_TYPING","TypingIndicator","sb","handlerId","setHandlerId","typingMembers","setTypingMembers","newHandlerId","handler","onTypingStatusUpdated","getTypingMembers","componentClassname","QuoteMessageThumbnail","isImageMessage","isAudioMessage","QuoteMessageInput","replyingMessage","onClose","fileMessage","CAPTION_1","QUOTE_MESSAGE_INPUT__REPLY_TO","NO_NAME","QUOTE_MESSAGE_INPUT__FILE_TYPE_IMAGE","QUOTE_MESSAGE_INPUT__FILE_TYPE__VIDEO","QUOTE_MESSAGE_INPUT__FILE_TYPE_GIF","CLOSE","MessageInputWrapper","onSendMessage","onFileUpload","renderMessageInput","MESSAGE_INPUT__QUOTE_REPLY__PLACE_HOLDER","MESSAGE_INPUT__PLACE_HOLDER__DISABLED","MESSAGE_INPUT__PLACE_HOLDER__MUTED","startTyping","ConnectionStatus","TRYING_TO_CONNECT","DISCONNECTED","getChannelTitle","currentUserId","LabelStringSet","NO_TITLE","NO_MEMBERS","noop","ChatHeader","currentUser","subTitle","isMuted","theme","showSearchIcon","onSearchClick","onActionClick","ChannelAvatar","H_2","NOTIFICATIONS_OFF_FILLED","SEARCH","INFO","coverUrl","ConversationPanel","stores","sdkStore","userStore","config","reconnect","dispatchers","queries","startingPoint","highlightedMessage","renderChatHeader","onChatHeaderActionClick","sdkError","messageListQuery","warn","setHighLightedMessageId","useReducer","messagesReducer","messagesInitialState","messagesStore","readStatus","usingReaction","userDefinedDisableUserProfile","userDefinedRenderProfile","onScrollCallback","onScrollDownCallback","useGetChannel","subScriber","onSendFileMessage","NO_CHANNELS","WRONG","UserProfileProvider","LOADING","any","includeMetaArray","includeParentMessageText","limit","reverse","senderUserIdsFilter","withSendbirdContext"],"mappings":"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"}